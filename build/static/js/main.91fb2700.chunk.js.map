{"version":3,"sources":["requests.jsx","SendInputs.tsx","Message.tsx","MessagesAll.tsx","FriendAdd.tsx","LoginInputs.tsx","FriendRequest.tsx","FriendRequests.tsx","Login.tsx","Friend.tsx","Friends.tsx","Croper.tsx","Logo.tsx","App.tsx","index.tsx","reportWebVitals.js"],"names":["url","headersContent","GetProfileImage","user","useState","picture","loading","state","setState","useEffect","bodyContent","name","console","log","fetch","method","headers","credentials","body","JSON","stringify","then","data","text","parse","json","SendInputs","props","inputValue","setInputValue","className","type","onChange","event","target","value","onClick","userContent","reciverContent","textContent","sender","receiver","content","res","resJson","PostRequest","valueUser","Message","MessagesAll","messages","filterSender","filterReceiver","GetWithFilter","map","_id","FriendAdd","friend","setFriend","placeholder","newFriendContent","newFriend","AddFriendRequest","toggleFriendAdded","LoginInputs","localStorage","getItem","storeUser","setStoreUser","undefined","userWarning","setUserWarning","storePassword","setStorePassword","finalLoginPassword","setFinalLoginPassword","finalRegisterUser","setFinalRegisterUser","passwordWarning","setPasswordWarning","finalUser","finalPassword","successfulLogin","loginLoading","pass","UserLogin","newUser","doesUserExist","registerLoading","DoesUserExist","login","toggleAlreadySet","saveUser","FriendRequest","acceptFriend","AddFriend","declineFriend","friendToRemove","FriendToRemove","RemoveFriendRequest","date","FriendRequests","requests","GetFriendRequests","length","r","Login","isSet","storedUser","visible","setLoginVisibility","alreadySent","setAlreadySent","handleToggle","toggleAlreadySent","setNewFriend","removeItem","logOut","Friend","setReceiver","src","Friends","valueReceiver","friends","friendAdded","GetFriends","Croper","x","y","crop","setCrop","zoom","setZoom","onCropComplete","useCallback","croppedArea","croppedAreaPixels","handleAreaToCrop","image","aspect","onCropChange","onZoomChange","Logo","setImage","modal","setModal","areaToCrop","setAreaToCrop","closeModal","e","files","reader","FileReader","readAsDataURL","onload","base64","result","areatocrop","UploadProfileImage","App","setUser","setFriendAdded","userName","setItem","valueReciever","username","password","friendRequests","profileImage","AddUser","ReactDOM","render","document","getElementById","reportWebVitals","exports","__esModule","onPerfEntry","Function","Promise","resolve","require","_a","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.91fb2700.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst url = 'http://192.168.0.16:5000/';\nconst headersContent = {\n  // \"Access-Control-Allow-Credentials\": \"true\",\n  // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n  // \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\n  // \"Access-Control-Max-Age\": \"1000\",\n  // \"Access-Control-Allow-Headers\": \"x-requested-with, Content-Type, origin, authorization, accept, client-security-token\",\n  // \"Content-Type\": \"application/json\"\n}\n\nexport const PostRequest = (userContent, reciverContent, textContent) => {\n  console.log(\"This is the texxt content: \" + textContent)\n  var bodyContent = {\n    sender: userContent,\n    receiver: reciverContent,\n    content: textContent\n  }\n  fetch(url + \"addmessage\", {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(\"PostRequest: \", resJson)\n    return resJson\n  })\n}\n\nexport const UploadProfileImage = (user, image, areaToCrop) => {\n  const bodyContent = {\n    name: user,\n    image: image,\n      areatocrop : areaToCrop\n  }\n  console.log(\"UploadProfileImage\", bodyContent)\n  fetch(url + \"uploadprofileimage\", {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(\"PostRequest: \", resJson)\n    return resJson\n  })\n}\n\nexport const GetProfileImage = (user) => {\n  const [state, setState] = useState({picture: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    console.log(\"GetProfileImage: bodyContent: \", bodyContent)\n    setState(state => ({picture: state.picture, loading: true}))\n    fetch(url + \"getprofileimage\", {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetProfileImage: json data: \", json)\n      setState({picture: json, loading: false})\n    })\n  }, [user])\n  return state\n}\n\nexport const UserLogin = (finalUser, finalPassword) => {\n  const [state, setState] = useState({successfulLogin: null, loginLoading: true})\n  const url = 'http://192.168.0.16:5000/login';\n  useEffect(() => {\n    var bodyContent = {\n      name: finalUser,\n      pass: finalPassword\n    }\n    console.log(\"Login: bodyContent: \", bodyContent)\n    setState(state => ({successfulLogin: null, loginLoading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"UserLogin: json data\", json)\n      if (json != null) {\n        console.log(\"UserLogin: json set\")\n        setState({successfulLogin: json, loginLoading: false})\n      }\n    })\n  }, [finalPassword])\n  return state\n}\n\nexport const DoesUserExist = (newUser) => {\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({doesUserExist: null, registerLoading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: newUser\n    }\n    console.log(\"DoesUserExist: bodyContent: \", bodyContent, newUser)\n    setState({doesUserExist: null, registerLoading: true})\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, newUser)\n      setState({doesUserExist: json, registerLoading: false})\n    })\n  }, [newUser])\n  return state\n}\n\nexport const GetFriendRequests = (user) => {\n  const url = 'http://localhost:5000/getfriendrequests';\n  const [state, setState] = useState({requests: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    console.log(\"GetFriendRequests: bodyContent: \", bodyContent)\n    setState(state => ({requests: state.requests, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriendRequests: json data: \", json)\n      setState({requests: json, loading: false})\n    })\n  }, [])\n  return state\n}\n\nexport const GetWithFilter = (filterSender, filterReceiver) => {\n  const url = 'http://localhost:5000/getwithfilter';\n  const [state, setState] = useState({messages: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      sender: filterSender,\n      receiver: filterReceiver\n    }\n    setState(state => ({messages: state.messages, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetWithFilter: json data: \", json)\n      setState({messages: json, loading: false})\n    })\n  }, [filterReceiver, filterSender])\n  return state\n}\n\n\nexport const AddFriend = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriend';\n  // var jsonData\n  var bodyContent = {\n    name: userContent,\n    newFriend: newFriendContent\n  }\n\n  console.log(\"AddFriend: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriend: \", json)\n    return json\n  })\n}\n\nexport const AddFriendRequest = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriendrequest';\n  // var jsonData\n  var bodyContent = {\n    name: userContent,\n    newFriend: newFriendContent\n  }\n\n  console.log(\"AddFriendRequest: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriendRequest: \", json)\n    return json\n  })\n}\n\nexport const RemoveFriendRequest = (user, friendToRemove) => {\n  const url = 'http://192.168.0.16:5000/removefriendrequest';\n  // var jsonData\n  var bodyContent = {\n    name: user,\n    FriendToRemove: friendToRemove\n  }\n\n  console.log(\"RemoveFriendRequest: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"RemoveFriendRequest: \", json)\n    return json\n  })\n}\n\nexport const AddUser = (username, password) => {\n  // TODO: Maybe this doesnt work without capital letters. Test it\n  const url = 'http://192.168.0.16:5000/adduser';\n  var bodyContent = {\n    name: username,\n    pass: password,\n    friends: [],\n    friendRequests: [],\n    profileImage: \"\"\n  }\n  console.log(\"AddUser: bodyContent: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n    console.log(\"AddUser: \", json)\n    return json\n  })\n}\n\nexport const GetFriends = (user, friendAdded) => {\n  const url = 'http://192.168.0.16:5000/getfriends';\n  const [state, setState] = useState({friends: null})\n\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    setState(state => ({data: state.data}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriends: \", json)\n      setState({friends: json})\n    })\n  }, [user, friendAdded])\n\n  return state\n}\n","import React, { useState } from 'react'\nimport { PostRequest } from './requests.jsx'\n\nconst SendInputs = (props: any) => {\n\n  const [inputValue, setInputValue] = useState(\"\")\n\n  const handleInput = (event: any) => {\n    setInputValue(event.target.value)\n  }\n\n\n  const postValue = () => {\n\n    PostRequest(props.valueUser, props.receiver, inputValue)\n  }\n\n  return (\n    <div className=\"inputs\">\n      <form>\n        <input type=\"text\" className=\"sendInput textInput\" onChange={handleInput} />\n        <button type=\"button\" className=\"sendButton button\" onClick={postValue}> Send </button>\n      </form>\n    </div>\n  )\n}\n\nexport default SendInputs\n","import React from 'react'\n\nconst Message = (props: any) => {\n  const sender: string = props.data.sender\n  const text: string = props.data.content\n  const user: string = props.user\n\n  return (\n    <div className={`message ${user === sender ? \"messageRigth\" : \"messageLeft\"}`}>\n      {text}\n    </div>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\nimport { GetWithFilter } from './requests.jsx'\n\nexport const MessagesAll = (props: any) => {\n  const { messages } = GetWithFilter(props.sender, props.receiver)\n  console.log(\"MessagesAll: data: \", messages)\n  console.log(messages)\n  if (props.receiver == \"\") {\n    return (\n      <div className=\"messages\" >\n        <span className=\"noMessagesText\">To start chatting select a receiver</span>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"messages\">\n        <h3>{props.receiver} </h3>\n        {!messages ? \"loading\" : messages.map((content: any) => (\n          <Message data={content} user={props.valueUser} key={content._id} />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default MessagesAll\n","import React, { useState } from 'react'\nimport { AddFriendRequest } from './requests'\n\nexport const FriendAdd = (props: any) => {\n\n  const [friend, setFriend] = useState(\"\")\n  const sendFriend = () => {\n    AddFriendRequest(props.user, friend)\n    props.toggleFriendAdded()\n  }\n\n  const changeFriend = (event: any) => {\n    setFriend(event.target.value)\n  }\n\n  return (\n    <div className=\"friendAdd\">\n      <input className=\"friendAddInput textInput\" type=\"text\" onChange={changeFriend} placeholder=\"Friend Name\"></input>\n      <button type=\"button\" className=\"friendAddButton button\" onClick={sendFriend}>Add friend</button>\n    </div>\n  )\n}\n\n\n\n\nexport default FriendAdd\n","import React, { useState, useEffect } from 'react'\nimport { UserLogin, DoesUserExist } from './requests.jsx'\n\nconst LoginInputs = (props: any) => {\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"))\n  const [userWarning, setUserWarning] = useState(undefined)\n  const [storePassword, setStorePassword] = useState(\"\")\n  const [finalLoginPassword, setFinalLoginPassword] = useState(\"\")\n  const [finalRegisterUser, setFinalRegisterUser] = useState(\"\")\n  const [passwordWarning, setPasswordWarning] = useState(undefined)\n  const handleRegister = (event: any) => {\n    setStorePassword(event.target.value)\n  }\n\n  const handleLogin = (event: any) => {\n    setStoreUser(event.target.value)\n  }\n\n  var { loginLoading, successfulLogin } = UserLogin(storeUser, finalLoginPassword)\n  var { doesUserExist, registerLoading } = DoesUserExist(finalRegisterUser)\n\n  useEffect(() => {\n    console.log(\"LoginInputs: sendLogin: loading, successfulLogin\", loginLoading, successfulLogin)\n    // Ask if the data has been loaded, this cant be done with successfulLogin because it may be still the old value\n    if (!loginLoading) {\n      // Never null\n      if (successfulLogin) {\n        console.log(\"LoginInputs: sendLogin: successfully\", successfulLogin)\n        props.login(storeUser)\n        props.toggleAlreadySet()\n        // doesUserExist = false\n      } else {\n        setPasswordWarning(true)\n        setUserWarning(false)\n      }\n      successfulLogin = null\n    }\n  }, [successfulLogin])\n  console.log(doesUserExist)\n\n  useEffect(() => {\n    console.log(\"LoginInputs: sendRegister: loading, doesuserExist\", registerLoading, doesUserExist)\n    // Ask if the data has been loaded\n    if (!registerLoading) {\n      if (!doesUserExist) {\n        console.log(\"LoginInputs: storeUser\", storeUser)\n        if (storeUser !== \"\" && storeUser !== \"null\") {\n          setUserWarning(false)\n          console.log(\"LoginInputs: SendInput: doesUserExist \", doesUserExist)\n          props.saveUser(storeUser, storePassword)\n          props.toggleAlreadySet()\n          // doesUserExist = false\n        }\n      } else {\n        setUserWarning(true)\n        setPasswordWarning(false)\n      }\n    }\n  }, [doesUserExist])\n\n  return (\n    <div className=\"logins\">\n      <input type=\"text\" onChange={handleLogin} className=\"loginTextInput textInput\" placeholder=\"Username\"></input>\n      <input type=\"text\" onChange={handleRegister} className=\"loginTextInput textInput\" placeholder=\"Password\"></input>\n      <button type=\"button\" onClick={() => {\n        setFinalLoginPassword(storePassword)\n      }} className=\"loginButtons button\">Login</button>\n      <button type=\"button\" onClick={() => {\n        setFinalRegisterUser(storeUser)\n      }} className=\"loginButtons button\">Register</button>\n      <span className=\"userExistsWarning\"> {userWarning !== undefined ? userWarning ? \"User already exists ❌\" : \"\" : \"\"} </span>\n      <span className=\"userExistsWarning\"> {passwordWarning !== undefined ? passwordWarning ? \"Wrong Password or username ❌\" : \"\" : \"\"} </span>\n    </div>\n  )\n}\n\nexport default LoginInputs\n","import React from 'react'\nimport { AddFriend, RemoveFriendRequest } from './requests'\n\nconst FriendRequest = (props: any) => {\n  const acceptFriend = (newFriend: string) => {\n    AddFriend(props.valueUser, newFriend)\n  }\n\n  const declineFriend = (friendToRemove: string) => {\n    RemoveFriendRequest(props.valueUser, friendToRemove)\n  }\n\n  return (\n    <div className=\"friendRequests\">\n      <span>{props.name} {props.date} </span>\n      <button type=\"button\" onClick={() => {\n        declineFriend(props.name)\n      }} className=\"friendRequestButton button\"> ⤬ </button>\n      <button type=\"button\" onClick={() => {\n        acceptFriend(props.name)\n      }} className=\"friendRequestButton button\"> ✓ </button>\n    </div>\n  )\n}\n\nexport default FriendRequest\n","import React from 'react'\nimport FriendRequest from './FriendRequest'\nimport { GetFriendRequests } from './requests.jsx'\n\nconst FriendRequests = (props: any) => {\n  const { requests } = GetFriendRequests(props.valueUser)\n  console.log(\"FriendRequests: data: \", requests, props.valueUser)\n\n  return (\n    <div>\n      <h2> Friend requests </h2>\n      {requests == null ? \"Loading\" : requests.length == 0 ? \"No requests\" : requests.map((r: any) => (\n        <div> <FriendRequest valueUser={props.valueUser}name={r.name} date={r.date} /> </div>))}\n    </div>\n  )\n}\n\nexport default FriendRequests\n","import React, { useState } from 'react'\nimport FriendAdd from './FriendAdd'\nimport LoginInputs from './LoginInputs'\nimport FriendRequests from './FriendRequests'\n\n\nexport const Login = (props: any) => {\n  const isSet = localStorage.getItem(\"user\") === \"null\"\n  const storedUser = localStorage.getItem(\"user\")\n  const [visible, setLoginVisibility] = useState(false)\n  const [alreadySent, setAlreadySent] = useState(!isSet)\n\n  props.storeUser(storedUser)\n  const handleToggle = () => {\n    setLoginVisibility(!visible)\n  }\n  const toggleAlreadySent = () => {\n    setAlreadySent(!alreadySent)\n  }\n\n  const logOutOnClick = () => {\n    localStorage.removeItem(\"user\")\n    props.logOut()\n    toggleAlreadySent()\n  }\n\n  if (visible) {\n    console.log(\"Login: alreadySent, storedUser: \", alreadySent, storedUser)\n    if (!alreadySent || storedUser === \"undefined\") {\n      return (\n        <div className=\"loginDiv\">\n          <div className=\"loginToggleDiv\">\n            <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >👤</button>\n          </div>\n          <LoginInputs login={props.login} saveUser={props.saveUser} valueUser={props.valueUser} toggleAlreadySet={toggleAlreadySent} />\n          <FriendAdd setNewFriend={props.setNewFriend} />\n          <FriendRequests valueUser={props.valueUser} />\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"loginDiv\">\n          <div className=\"loginToggleDiv\">\n            <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >👤</button>\n          </div>\n          <div className=\"logins\">\n            <FriendAdd toggleFriendAdded={props.toggleFriendAdded} setNewFriend={props.setNewFriend} user={props.valueUser} />\n            <div className=\"friendAdd\">\n              <button className=\"logoutButton button\" onClick={logOutOnClick}>Logout</button>\n            </div>\n            <FriendRequests valueUser={props.valueUser} />\n          </div>\n        </div>\n      )\n    }\n  }\n  return (\n    <div className=\"loginToggleDiv\">\n      <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >👤</button>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { GetProfileImage } from './requests.jsx'\n\nfunction Friend(props: any) {\n  const setReceiver = () => {\n    props.setReceiver(props.name)\n  }\n\n  var { picture } = GetProfileImage(props.name)\n  console.log(\"Friend: picturea\", picture)\n  return (\n    <div className=\"friend\" onClick={setReceiver}>\n      <h3> {props.name} <img className=\"friendPicture\" src={picture}></img></h3>\n\n    </div>\n  )\n}\n\nexport default Friend\n","import React from 'react'\nimport Friend from './Friend'\nimport { GetFriends } from './requests.jsx'\n\nconst Friends = (props: any) => {\n  props.setReceiver(props.valueReceiver)\n  var { friends } = GetFriends(props.valueUser, props.friendAdded)\n  console.log(\"Friends: \", friends)\n  return (\n    <div>\n      <span className=\"currentUser\">{props.valueUser}</span>\n      <div> {!friends ? \"Loading friends\" : friends.map((name: any) => (<Friend name={name} setReceiver={props.setReceiver} />))} </div>\n    </div>\n  )\n}\n\nexport default Friends\n","import React, { useState, useCallback } from 'react'\nimport Cropper from 'react-easy-crop'\n\nconst Croper = (props: any) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\n  const [zoom, setZoom] = useState(1)\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    console.log(croppedAreaPixels)\n    props.handleAreaToCrop(croppedAreaPixels)\n    // props.crop(croppedAr ea, croppedAreaPixels)\n  }, [])\n  return (\n    <div>\n      <div className=\"crop-container\">\n        <Cropper image={props.image} crop={crop} zoom={zoom} aspect={1 / 1} onCropChange={setCrop} onCropComplete={onCropComplete} onZoomChange={setZoom} />\n      </div>\n      <div className=\"controls\">\n      </div>\n    </div >)\n}\n\nexport default Croper\n","import React, { useState, useEffect } from 'react'\nimport { UploadProfileImage, GetProfileImage } from './requests.jsx'\nimport Croper from './Croper'\n\nconst Logo = (props: any) => {\n  const [image, setImage] = useState(null)\n  const [modal, setModal] = useState(false)\n  const [areaToCrop, setAreaToCrop] = useState({})\n\n  var { picture } = GetProfileImage(props.valueUser)\n  useEffect(() => {\n    if (props.valueUser != null) {\n      setImage(picture)\n    }\n  }, [picture])\n  const sendFile = () => {\n    UploadProfileImage(props.valueUser, image, areaToCrop)\n  }\n\n  const handleAreaToCrop = (data: object) => {\n    console.log(data)\n    setAreaToCrop(data)\n  }\n\n  const handleFile = (e: any) => {\n    let image = e.target.files[0]\n\n    let reader = new FileReader()\n    console.log(\"Logo: image\", image)\n    reader.readAsDataURL(image)\n    reader.onload = (e: any) => {\n      let base64 = e.target.result\n      console.log(base64)\n      setImage(base64)\n    }\n  }\n\n  const imageOnClick = () => {\n    console.log(\"Logo: imageOnClick: modal\", true)\n    setModal(true)\n  }\n\n  const closeModal = () => {\n    console.log(\"Logo: imageOnClick: modal\", false)\n    setModal(false)\n  }\n\n\n  return (\n    <div>\n      <div className={`overlay ${modal ? \"overlayActive\" : \"\"}`} onClick={closeModal}>\n      </div>\n      <img src={image} onClick={imageOnClick} className=\"profileImage\" ></img>\n      <div className={`modal ${modal ? \"modalActive\" : \"\"}`}>\n        <div className=\"modalHeader\">\n          <h3> Resise your image </h3>\n          <button type=\"button\" className=\"closeHeaderButton\" onClick={closeModal}>&times;</button>\n        </div>\n        <div className=\"modalBody\">\n            <div>\n          <input type=\"file\" onChange={handleFile} className=\"changeProfileImage uploadImageInput\" name=\"image\" />\n          <button type=\"button\" className=\"sendFile\" onClick={sendFile}>Upload File</button>\n            </div>\n          <div className=\"croper\">\n            <Croper handleAreaToCrop={handleAreaToCrop} image={image} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport './App.css'\nimport SendInput from './SendInputs'\nimport MessagesAll from './MessagesAll'\nimport Login from './Login'\nimport Friends from './Friends'\nimport Logo from './Logo'\nimport { AddUser } from './requests.jsx'\n\nconst App = () => {\n  // postRequest(\"this is the test\", \"this is the new test\")\n  const [user, setUser] = useState(\"\")\n  const [receiver, setReceiver] = useState(\"\")\n  const [friendAdded, setFriendAdded] = useState(false) //This is just a value to toggle when a friend gets added so the apt gets fetched\n\n  const toggleFriendAdded = () => {\n    setFriendAdded(!friendAdded)\n  }\n\n  const storeUser = (userName: string) => {\n    localStorage.setItem(\"user\", userName)\n    setUser(userName)\n  }\n\n  const saveUser = (username: string, password: string) => {\n    storeUser(username)\n    AddUser(username, password)\n  }\n\n\n  const login = (username: string) => {\n    storeUser(username)\n  }\n\n  const logOut = () => {\n    console.log(\"App: logOut\")\n    setUser(undefined)\n  }\n\n  const setReceiverFunc = (name: string) => {\n    setReceiver(name)\n  }\n\n  return (\n    <div>\n      <div className=\"app\">\n        <div className=\"friends\">\n          <Logo valueUser={user} valueReciever={receiver}/>\n          <Friends friendAdded={friendAdded} valueUser={user} setReceiver={setReceiverFunc} valueReceiver={receiver} />\n        </div>\n        <div className=\"messages\">\n          <MessagesAll valueUser={user} sender={user} receiver={receiver} />\n          <SendInput valueUser={user} receiver={receiver} />\n        </div>\n        <div className=\"float\">\n          <Login login={login} logOut={logOut} toggleFriendAdded={toggleFriendAdded} storeUser={storeUser} saveUser={saveUser} valueUser={user} />  {/* This makes it possible to speak from child to child. Pases data: user from login to sendInput*/}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// This renders App.js\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\"use strict\";\nexports.__esModule = true;\nvar reportWebVitals = function (onPerfEntry) {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        Promise.resolve().then(function () { return require('web-vitals'); }).then(function (_a) {\n            var getCLS = _a.getCLS, getFID = _a.getFID, getFCP = _a.getFCP, getLCP = _a.getLCP, getTTFB = _a.getTTFB;\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\nexports[\"default\"] = reportWebVitals;\n"],"sourceRoot":""}