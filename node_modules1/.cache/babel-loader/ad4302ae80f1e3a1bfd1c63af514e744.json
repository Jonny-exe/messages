{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-project/src/Croper.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst Logo = () => {\n  _s();\n\n  const [state, setState] = useState({\n    image: 'your-image-url or as base64',\n    crop: {\n      x: 0,\n      y: 0\n    },\n    zoom: 1,\n    aspect: 1 / 1\n  });\n\n  const onCropChange = crop => {\n    setState({\n      crop\n    });\n  };\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n  const onZoomChange = zoom => {\n    setState({\n      zoom\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [\"image=\", state.image, \"crop=\", state.crop, \"zoom=\", state.zoom, \"aspect=\", state.aspect, \"onCropChange=\", onCropChange, \"onCropComplete=\", onCropComplete, \"onZoomChange=\", onZoomChange, /*#__PURE__*/_jsxDEV(Cropper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logo, \"0nXI7epfug42ZuBl0l+LOF+KyWk=\");\n\n_c = Logo;\nexport default Logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-project/src/Croper.jsx"],"names":["React","useState","Cropper","Logo","state","setState","image","crop","x","y","zoom","aspect","onCropChange","onCropComplete","croppedArea","croppedAreaPixels","console","log","onZoomChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AACjCK,IAAAA,KAAK,EAAE,6BAD0B;AAEjCC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAF2B;AAGjCC,IAAAA,IAAI,EAAE,CAH2B;AAIjCC,IAAAA,MAAM,EAAE,IAAI;AAJqB,GAAD,CAAlC;;AAOA,QAAMC,YAAY,GAAIL,IAAD,IAAU;AAC7BF,IAAAA,QAAQ,CAAC;AAAEE,MAAAA;AAAF,KAAD,CAAR;AACD,GAFD;;AAKA,QAAMM,cAAc,GAAG,CAACC,WAAD,EAAcC,iBAAd,KAAoC;AACzDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBC,iBAAzB;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAIR,IAAD,IAAU;AAC7BL,IAAAA,QAAQ,CAAC;AAAEK,MAAAA;AAAF,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,yBACSN,KAAK,CAACE,KADf,WAEQF,KAAK,CAACG,IAFd,WAGQH,KAAK,CAACM,IAHd,aAIUN,KAAK,CAACO,MAJhB,mBAKgBC,YALhB,qBAMkBC,cANlB,mBAOgBK,YAPhB,eAO6B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAP7B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjCD;;GAAMf,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport Cropper from 'react-easy-crop'\nconst Logo = () => {\n  const [state, setState] = useState({\n    image: 'your-image-url or as base64',\n    crop: { x: 0, y: 0 },\n    zoom: 1,\n    aspect: 1 / 1,\r\n  })\n\n  const onCropChange = (crop) => {\n    setState({ crop })\n  }\n\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels)\n  }\n\n  const onZoomChange = (zoom) => {\n    setState({ zoom })\n  }\n\n  return (\n    <div className=\"profile\">\n      image={state.image}\n      crop={state.crop}\n      zoom={state.zoom}\n      aspect={state.aspect}\n      onCropChange={onCropChange}\n      onCropComplete={onCropComplete}\n      onZoomChange={onZoomChange}<Cropper\n      />\n    </div>\n  )\n}\n\nexport default Logo\n"]},"metadata":{},"sourceType":"module"}