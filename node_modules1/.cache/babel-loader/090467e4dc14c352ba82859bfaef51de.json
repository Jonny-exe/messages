{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { UserLogin, DoesUserExist } from './requests.jsx';\n\nconst LoginInputs = props => {\n  _s();\n\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"));\n  const [userWarning, setUserWarning] = useState(false);\n  const [storePassword, setStorePassword] = useState(\"\");\n  const [finalLoginPassword, setFinalLoginPassword] = useState(\"\");\n  const [finalRegisterUser, setFinalRegisterUser] = useState(\"\");\n  const [passwordWarning, setPasswordWarning] = useState(false);\n\n  const handleRegister = event => {\n    setStorePassword(event.target.value);\n  };\n\n  const handleLogin = event => {\n    setStoreUser(event.target.value);\n  };\n\n  var {\n    loading,\n    successfulLogin\n  } = UserLogin(storeUser, finalLoginPassword);\n  var {\n    doesUserExist\n  } = DoesUserExist(finalRegisterUser);\n  useEffect(() => {\n    console.log(\"LoginInputs: sendLogin: loading, successfulLogin\", loading, successfulLogin); // Ask if the data has been loaded\n\n    if (!loading) {\n      // Never null\n      if (successfulLogin) {\n        console.log(\"LoginInputs: sendLogin: successfully\", successfulLogin);\n        props.login(storeUser);\n        props.toggleAlreadySet();\n        doesUserExist = false;\n      } else {\n        setPasswordWarning(true);\n        setUserWarning(false);\n      }\n\n      successfulLogin = null;\n    }\n  }, [successfulLogin]);\n  useEffect(() => {\n    console.log(\"LoginInputs: sendRegister: loading, successfulLogin\", loading, successfulLogin); // Ask if the data has been loaded\n\n    if (!doesUserExist && storeUser != \"\" && storeUser != \"null\") {\n      setUserWarning(false);\n      console.log(\"LoginInputs: SendInput: doesUserExist \", doesUserExist);\n      props.saveUser(storeUser, storePassword);\n      props.toggleAlreadySet();\n      doesUserExist = false;\n    } else {\n      setUserWarning(true);\n      setPasswordWarning(false);\n    }\n  }, [doesUserExist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logins\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleLogin,\n      className: \"loginTextInput\",\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleRegister,\n      className: \"loginTextInput\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setFinalLoginPassword(storePassword);\n      },\n      className: \"loginButtons\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setFinalRegisterUser(storeUser);\n      },\n      className: \"loginButtons\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userExistsWarning\",\n      children: [\" \", userWarning == undefined ? userWarning ? \"User already exists ❌\" : \"\" : \"\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userExistsWarning\",\n      children: [\" \", userWarning == undefined ? passwordWarning ? \"Wrong Password or username ❌\" : \"\" : \"\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginInputs, \"xAryI0kHrFNXNfSBHCuaIvM99/s=\");\n\n_c = LoginInputs;\nexport default LoginInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInputs\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx"],"names":["React","useState","useEffect","UserLogin","DoesUserExist","LoginInputs","props","storeUser","setStoreUser","localStorage","getItem","userWarning","setUserWarning","storePassword","setStorePassword","finalLoginPassword","setFinalLoginPassword","finalRegisterUser","setFinalRegisterUser","passwordWarning","setPasswordWarning","handleRegister","event","target","value","handleLogin","loading","successfulLogin","doesUserExist","console","log","login","toggleAlreadySet","saveUser","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { UserLogin, DoesUserExist } from './requests.jsx'\n\nconst LoginInputs = (props: any) => {\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"))\n  const [userWarning, setUserWarning] = useState(false)\n  const [storePassword, setStorePassword] = useState(\"\")\n  const [finalLoginPassword, setFinalLoginPassword] = useState(\"\")\n  const [finalRegisterUser, setFinalRegisterUser] = useState(\"\")\n  const [passwordWarning, setPasswordWarning] = useState(false)\n  const handleRegister = (event: any) => {\n    setStorePassword(event.target.value)\n  }\n\n  const handleLogin = (event: any) => {\n    setStoreUser(event.target.value)\n  }\n\n  var { loading, successfulLogin } = UserLogin(storeUser, finalLoginPassword)\n  var { doesUserExist } = DoesUserExist(finalRegisterUser)\n\n  useEffect(() => {\n    console.log(\"LoginInputs: sendLogin: loading, successfulLogin\", loading, successfulLogin)\n    // Ask if the data has been loaded\n    if (!loading) {\n      // Never null\n      if (successfulLogin) {\n        console.log(\"LoginInputs: sendLogin: successfully\", successfulLogin)\n        props.login(storeUser)\n        props.toggleAlreadySet()\n        doesUserExist = false\n      } else {\n        setPasswordWarning(true)\n        setUserWarning(false)\n      }\n      successfulLogin = null\n    }\n  }, [successfulLogin])\n\n\n  useEffect(() => {\n    console.log(\"LoginInputs: sendRegister: loading, successfulLogin\", loading, successfulLogin)\n    // Ask if the data has been loaded\n    if (!doesUserExist && storeUser != \"\" && storeUser != \"null\") {\n      setUserWarning(false)\n      console.log(\"LoginInputs: SendInput: doesUserExist \", doesUserExist)\n      props.saveUser(storeUser, storePassword)\n      props.toggleAlreadySet()\n      doesUserExist = false\n    } else {\n      setUserWarning(true)\n      setPasswordWarning(false)\n    }\n  }, [doesUserExist])\n\n\n  return (\n    <div className=\"logins\">\n      <input type=\"text\" onChange={handleLogin} className=\"loginTextInput\" placeholder=\"Username\"></input>\n      <input type=\"text\" onChange={handleRegister} className=\"loginTextInput\" placeholder=\"Password\"></input>\n      <button type=\"button\" onClick={() => {\n        setFinalLoginPassword(storePassword)\n      }} className=\"loginButtons\">Login</button>\n      <button type=\"button\" onClick={() => {\n        setFinalRegisterUser(storeUser)\n      }} className=\"loginButtons\">Register</button>\n      <span className=\"userExistsWarning\"> {userWarning == undefined ? userWarning ? \"User already exists ❌\" : \"\": \"\"} </span>\n      <span className=\"userExistsWarning\"> {userWarning == undefined ? passwordWarning ? \"Wrong Password or username ❌\" : \"\" : \"\"} </span>\n    </div>\n  )\n}\n\nexport default LoginInputs\n"]},"metadata":{},"sourceType":"module"}