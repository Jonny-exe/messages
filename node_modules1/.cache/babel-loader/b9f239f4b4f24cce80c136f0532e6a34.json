{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Test } from './requests.jsx';\n\nconst LoginInputs = props => {\n  _s();\n\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"));\n  const [finalPassword, setFinalPassword] = useState(\"\");\n  const [userWarning, setUserWarning] = useState(false);\n  const [passwordWarning, setPasswordWarning] = useState(false);\n  const [storePassword, setStorePassword] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n\n  const handleRegister = event => {\n    setStorePassword(event.target.value);\n  };\n\n  const handleLogin = event => {\n    setStoreUser(event.target.value);\n  };\n\n  var DoesExist;\n  var {\n    succesfullLogin\n  } = Test(counter, storeUser, finalPassword);\n\n  const sendLogin = () => {\n    console.log(\"LoginInputs: sendLogin: successfully\", succesfullLogin);\n\n    if (succesfullLogin != null) {\n      if (succesfullLogin) {\n        console.log(\"LoginInputs: sendLogin: successfully\", succesfullLogin);\n        props.login(storeUser);\n        props.setAlreadySet();\n        DoesExist = false;\n      } else {\n        setPasswordWarning(true);\n        setUserWarning(false);\n      }\n\n      succesfullLogin = null;\n    } else {\n      console.log(\"LoginInputs: sendLogin: successfully\", succesfullLogin);\n      setTimeout(sendLogin, 1000);\n    }\n  };\n\n  const sendRegister = () => {\n    if (!DoesExist) {\n      setUserWarning(false);\n      console.log(\"LoginInputs: SendInput: DoesExist \", DoesExist);\n      props.saveUser(storeUser, storePassword);\n      props.setAlreadySet();\n      DoesExist = false;\n    } else {\n      setUserWarning(true);\n      setPasswordWarning(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logins\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleLogin,\n      className: \"loginTextInput\",\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleRegister,\n      className: \"loginTextInput\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setFinalPassword(storePassword);\n        sendLogin();\n        setCounter(counter + 1);\n      },\n      className: \"loginButtons\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: sendRegister,\n      className: \"loginButtons\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userExistsWarning\",\n      children: [\" \", userWarning ? \"User already exists ❌\" : \"\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userExistsWarning\",\n      children: [\" \", passwordWarning ? \"Wrong Password or username ❌\" : \"\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginInputs, \"F4OyWQtWvOxxdGnOpV69S98Fs+4=\");\n\n_c = LoginInputs;\nexport default LoginInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInputs\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx"],"names":["React","useState","Test","LoginInputs","props","storeUser","setStoreUser","localStorage","getItem","finalPassword","setFinalPassword","userWarning","setUserWarning","passwordWarning","setPasswordWarning","storePassword","setStorePassword","counter","setCounter","handleRegister","event","target","value","handleLogin","DoesExist","succesfullLogin","sendLogin","console","log","login","setAlreadySet","setTimeout","sendRegister","saveUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { DoesUserExist, UserLogin, Test } from './requests.jsx'\n\nconst LoginInputs = (props: any) => {\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"))\n  const [finalPassword, setFinalPassword] = useState(\"\")\n  const [userWarning, setUserWarning] = useState(false)\n  const [passwordWarning, setPasswordWarning] = useState(false)\n  const [storePassword, setStorePassword] = useState(\"\")\n  const [counter, setCounter] = useState(0)\n  const handleRegister = (event: any) => {\n    setStorePassword(event.target.value)\n  }\n\n  const handleLogin = (event: any) => {\n    setStoreUser(event.target.value)\n  }\n\n  var DoesExist: boolean\n  var { succesfullLogin } = Test(counter, storeUser, finalPassword)\n  const sendLogin = () => {\n    console.log(\"LoginInputs: sendLogin: successfully\", succesfullLogin)\n    if (succesfullLogin != null) {\n      if (succesfullLogin) {\n        console.log(\"LoginInputs: sendLogin: successfully\", succesfullLogin)\n        props.login(storeUser)\n        props.setAlreadySet()\n        DoesExist = false\n      } else {\n        setPasswordWarning(true)\n        setUserWarning(false)\n      }\n      succesfullLogin = null\n    } else {\n      console.log(\"LoginInputs: sendLogin: successfully\", succesfullLogin)\n      setTimeout(sendLogin, 1000)\n    }\n  }\n\n  const sendRegister = () => {\n    if (!DoesExist) {\n      setUserWarning(false)\n      console.log(\"LoginInputs: SendInput: DoesExist \", DoesExist)\n      props.saveUser(storeUser, storePassword)\n      props.setAlreadySet()\n      DoesExist = false\n    } else {\n      setUserWarning(true)\n      setPasswordWarning(false)\n    }\n  }\n\n  return (\n    <div className=\"logins\">\n      <input type=\"text\" onChange={handleLogin} className=\"loginTextInput\" placeholder=\"Username\"></input>\n      <input type=\"text\" onChange={handleRegister} className=\"loginTextInput\" placeholder=\"Password\"></input>\n      <button type=\"button\" onClick={() => {\n        setFinalPassword(storePassword)\n        sendLogin()\n        setCounter(counter + 1)\n      }} className=\"loginButtons\">Login</button>\n      <button type=\"button\" onClick={sendRegister} className=\"loginButtons\">Register</button>\n      {/* TODO: make this just change a color */}\n      <span className=\"userExistsWarning\"> {userWarning ? \"User already exists ❌\" : \"\"} </span>\n      <span className=\"userExistsWarning\"> {passwordWarning ? \"Wrong Password or username ❌\" : \"\"} </span>\n    </div>\n  )\n}\n\nexport default LoginInputs\n"]},"metadata":{},"sourceType":"module"}