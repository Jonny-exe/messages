{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FriendAdd from './FriendAdd';\nimport LoginInputs from './LoginInputs';\nexport const Login = props => {\n  _s();\n\n  const isSet = localStorage.getItem(\"user\") === \"undefined\";\n  const storedUser = localStorage.getItem(\"user\");\n  const [visible, setLoginVisibility] = useState(false);\n  const [alreadySent, setAlreadySent] = useState(!isSet);\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({\n    DoesExist: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      name: newUser\n    };\n    console.log(\"DoesUserExist: bodyContent: \", bodyContent, finalUser, newUser);\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, finalUser);\n      setState({\n        DoesExist: json,\n        loading: false\n      });\n    });\n  }, [finaluser]);\n  return state;\n  props.storeUser(storedUser);\n\n  const handleToggle = () => {\n    setLoginVisibility(!visible);\n  };\n\n  const toggleAlreadySet = () => {\n    setAlreadySent(!alreadySent);\n  };\n\n  const logOut = () => {\n    props.saveUser(undefined);\n  };\n\n  const logOutOnClick = () => {\n    localStorage.setItem(\"user\", \"undefined\");\n    logOut();\n    toggleAlreadySet();\n  };\n\n  if (visible) {\n    if (!alreadySent || storedUser === \"undefined\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginToggle\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleToggle,\n            className: \"loginToggle\",\n            children: \"Toggle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginInputs, {\n          saveUser: props.saveUser,\n          valueUser: props.valueUser,\n          setAlreadySet: toggleAlreadySet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FriendAdd, {\n          setNewFriend: props.setNewFriend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginToggle\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleToggle,\n            className: \"loginToggle\",\n            children: \"Toggle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logins\",\n          children: [/*#__PURE__*/_jsxDEV(FriendAdd, {\n            toggleFriendAdded: props.toggleFriendAdded,\n            setNewFriend: props.setNewFriend,\n            user: props.valueUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: logOutOnClick,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginToggle\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleToggle,\n      className: \"loginToggle\",\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"0NvbENzRnYsC98rJ/VAv31uhukE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/Login.tsx"],"names":["React","useState","FriendAdd","LoginInputs","Login","props","isSet","localStorage","getItem","storedUser","visible","setLoginVisibility","alreadySent","setAlreadySent","url","state","setState","DoesExist","loading","useEffect","bodyContent","name","newUser","console","log","finalUser","data","fetch","method","headers","headersContent","credentials","body","JSON","stringify","then","text","parse","json","finaluser","storeUser","handleToggle","toggleAlreadySet","logOut","saveUser","undefined","logOutOnClick","setItem","valueUser","setNewFriend","toggleFriendAdded"],"mappings":"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","sourcesContent":["import React, {  useState } from 'react'\nimport FriendAdd from './FriendAdd'\nimport LoginInputs from './LoginInputs'\n\n\nexport const Login = (props: any) => {\n\n  const isSet = localStorage.getItem(\"user\") === \"undefined\"\n  const storedUser = localStorage.getItem(\"user\")\n  const [visible, setLoginVisibility] = useState(false)\n  const [alreadySent, setAlreadySent] = useState(!isSet)\n\n\n\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({DoesExist: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: newUser\n    }\n    console.log(\"DoesUserExist: bodyContent: \", bodyContent, finalUser, newUser)\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, finalUser)\n      setState({DoesExist: json, loading: false})\n    })\n  }, [finaluser])\n  return state\n\n\n\n  props.storeUser(storedUser)\n  const handleToggle = () => {\n    setLoginVisibility(!visible)\n  }\n  const toggleAlreadySet = () => {\n    setAlreadySent(!alreadySent)\n  }\n\n  const logOut = () => {\n    props.saveUser(undefined)\n  }\n\n  const logOutOnClick = () => {\n    localStorage.setItem(\"user\", \"undefined\")\n    logOut()\n    toggleAlreadySet()\n  }\n\n  if (visible) {\n    if (!alreadySent || storedUser === \"undefined\") {\n      return (\n        <div className=\"loginDiv\">\n          <div className=\"loginToggle\">\n            <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >Toggle</button>\n          </div>\n          <LoginInputs saveUser={props.saveUser} valueUser={props.valueUser} setAlreadySet={toggleAlreadySet}/>\n          <FriendAdd setNewFriend={props.setNewFriend}/>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"loginDiv\">\n          <div className=\"loginToggle\">\n            <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >Toggle</button>\n          </div>\n          <div className=\"logins\">\n            <FriendAdd toggleFriendAdded={props.toggleFriendAdded}setNewFriend={props.setNewFriend} user={props.valueUser} />\n            <button onClick={logOutOnClick}>Logout</button>\n          </div>\n        </div>\n      )\n    }\n  }\n  return (\n    <div className=\"loginToggle\">\n      <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >Toggle</button>\n    </div>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}