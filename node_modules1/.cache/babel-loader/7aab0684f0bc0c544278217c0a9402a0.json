{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-project/src/Croper.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst Croper = props => {\n  _s();\n\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  }, []);\n\n  const onZoomChange = zoom => {\n    setState({\n      zoom\n    });\n  };\n\n  console.log(state, state.crop);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cropContainer\",\n    children: [\"hello\", /*#__PURE__*/_jsxDEV(Cropper, {\n      image: props.image,\n      crop: crop,\n      zoom: 1,\n      aspect: 1 / 1,\n      onCropChange: onCropChange,\n      onCropComplete: onCropComplete,\n      onZoomChange: onZoomChange,\n      onCropChange: setCrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Croper, \"lIGeui5o9nC6wNegLbGG+yHWLLk=\");\n\n_c = Croper;\nexport default Croper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Croper\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-project/src/Croper.jsx"],"names":["React","useState","useCallback","Cropper","Croper","props","crop","setCrop","x","y","onCropComplete","croppedArea","croppedAreaPixels","console","log","onZoomChange","zoom","setState","state","image","onCropChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAACO,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE;AAAV,GAAD,CAAhC;AAEA,QAAMC,cAAc,GAAGR,WAAW,CAAC,CAACS,WAAD,EAAcC,iBAAd,KAAoC;AACrEC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBC,iBAAzB;AACD,GAFiC,EAE/B,EAF+B,CAAlC;;AAIA,QAAMG,YAAY,GAAIC,IAAD,IAAU;AAC7BC,IAAAA,QAAQ,CAAC;AAACD,MAAAA;AAAD,KAAD,CAAR;AACD,GAFD;;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ,EAAmBA,KAAK,CAACZ,IAAzB;AACA,sBAAQ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,qCAEN,QAAC,OAAD;AAAS,MAAA,KAAK,EAAED,KAAK,CAACc,KAAtB;AAA6B,MAAA,IAAI,EAAEb,IAAnC;AAAyC,MAAA,IAAI,EAAE,CAA/C;AAAkD,MAAA,MAAM,EAAE,IAAI,CAA9D;AAAiE,MAAA,YAAY,EAAEc,YAA/E;AAA6F,MAAA,cAAc,EAAEV,cAA7G;AAA6H,MAAA,YAAY,EAAEK,YAA3I;AAAyJ,MAAA,YAAY,EAAER;AAAvK;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAKD,CAhBD;;GAAMH,M;;KAAAA,M;AAkBN,eAAeA,MAAf","sourcesContent":["import React, {useState, useCallback} from 'react'\nimport Cropper from 'react-easy-crop'\n\nconst Croper = (props) => {\n  const [crop, setCrop] = useState({x: 0, y: 0})\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels)\n  }, [])\n\n  const onZoomChange = (zoom) => {\n    setState({zoom})\n  }\n  console.log(state, state.crop)\n  return (<div className=\"cropContainer\">\n    hello\n    <Cropper image={props.image} crop={crop} zoom={1} aspect={1 / 1} onCropChange={onCropChange} onCropComplete={onCropComplete} onZoomChange={onZoomChange} onCropChange={setCrop}/>\n\n  </div>)\n}\n\nexport default Croper\n"]},"metadata":{},"sourceType":"module"}