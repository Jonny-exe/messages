{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DoesUserExist } from './requests.jsx';\n\nconst LoginInputs = props => {\n  _s();\n\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"));\n\n  const handleInput = event => {\n    setStoreUser(event.target.value);\n  };\n\n  var {\n    DoesExist\n  } = DoesUserExist(storeUser); // TODO: this doesnt work\n\n  const sendInput = () => {\n    if (!DoesExist) {\n      console.log(\"LoginInputs: SendInput: DoesExist \", DoesExist);\n      props.saveUser(storeUser);\n      props.setAlreadySet();\n      DoesExist = false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logins\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInput,\n      className: \"loginTextInput\",\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInput,\n      className: \"loginTextInput\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: sendInput,\n      className: \"loginButtons\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: sendInput,\n      className: \"loginButtons\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userExistsWarning\",\n      children: [\" \", DoesExist != null ? DoesExist ? \"User already exists ❌\" : \"User is valid ✅\" : \"Loading\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginInputs, \"yW0Sxg0E8XDkVQnk3AOOlVHnQps=\");\n\n_c = LoginInputs;\nexport default LoginInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInputs\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx"],"names":["React","useState","DoesUserExist","LoginInputs","props","storeUser","setStoreUser","localStorage","getItem","handleInput","event","target","value","DoesExist","sendInput","console","log","saveUser","setAlreadySet"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAgB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAACM,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAA1C;;AACF,QAAMC,WAAW,GAAIC,KAAD,IAAgB;AAClCJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACC,GAFH;;AAGE,MAAI;AAAEC,IAAAA;AAAF,MAAgBX,aAAa,CAACG,SAAD,CAAjC,CALkC,CAMlC;;AACA,QAAMS,SAAS,GAAG,MAAM;AACtB,QAAI,CAACD,SAAL,EAAgB;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDH,SAAlD;AACAT,MAAAA,KAAK,CAACa,QAAN,CAAeZ,SAAf;AACAD,MAAAA,KAAK,CAACc,aAAN;AACAL,MAAAA,SAAS,GAAG,KAAZ;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEJ,WAA7B;AAA0C,MAAA,SAAS,EAAC,gBAApD;AAAqE,MAAA,WAAW,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEA,WAA7B;AAA0C,MAAA,SAAS,EAAC,gBAApD;AAAqE,MAAA,WAAW,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEK,SAA/B;AAA0C,MAAA,SAAS,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEA,SAA/B;AAA0C,MAAA,SAAS,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,sBAAsCD,SAAS,IAAI,IAAb,GAAoBA,SAAS,GAAG,uBAAH,GAA6B,iBAA1D,GAA8E,SAApH;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzBD;;GAAMV,W;;KAAAA,W;AA2BN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { DoesUserExist } from './requests.jsx'\n\nconst LoginInputs = (props: any) => {\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"))\nconst handleInput = (event: any) => {\n  setStoreUser(event.target.value)\n  }\n  var { DoesExist } = DoesUserExist(storeUser)\n  // TODO: this doesnt work\n  const sendInput = () => {\n    if (!DoesExist) {\n      console.log(\"LoginInputs: SendInput: DoesExist \", DoesExist)\n      props.saveUser(storeUser)\n      props.setAlreadySet()\n      DoesExist = false\n    }\n  }\n\n  return (\n    <div className=\"logins\">\n      <input type=\"text\" onChange={handleInput} className=\"loginTextInput\" placeholder=\"Username\"></input>\n      <input type=\"text\" onChange={handleInput} className=\"loginTextInput\" placeholder=\"Password\"></input>\n      <button type=\"button\" onClick={sendInput} className=\"loginButtons\">Login</button>\n      <button type=\"button\" onClick={sendInput} className=\"loginButtons\">Register</button>\n      <span className=\"userExistsWarning\"> {DoesExist != null ? DoesExist ? \"User already exists ❌\" : \"User is valid ✅\" : \"Loading\"} </span>\n    </div>\n  )\n}\n\nexport default LoginInputs\n"]},"metadata":{},"sourceType":"module"}