{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FriendAdd from './FriendAdd';\nimport LoginInputs from './LoginInputs';\nexport const Login = props => {\n  _s();\n\n  console.log(\"Login: localStorage: \", localStorage.getItem(\"user\"));\n  const isSet = localStorage.getItem(\"user\") === undefined;\n  const storedUser = localStorage.getItem(\"user\");\n  const [visible, setLoginVisibility] = useState(false);\n  const [alreadySent, setAlreadySent] = useState(!isSet);\n  props.storeUser(storedUser);\n\n  const handleToggle = () => {\n    setLoginVisibility(!visible);\n  };\n\n  const toggleAlreadySet = () => {\n    setAlreadySent(!alreadySent);\n  };\n\n  const logOut = () => {\n    props.saveUser(undefined);\n  };\n\n  const logOutOnClick = () => {\n    localStorage.removeItem(\"user\");\n    logOut();\n    toggleAlreadySet();\n  };\n\n  if (visible) {\n    console.log(\"Login: alreadySent, storedUser: \", alreadySent, storedUser);\n\n    if (!alreadySent || storedUser === \"undefined\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginToggle\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleToggle,\n            className: \"loginToggle\",\n            children: \"Toggle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginInputs, {\n          login: props.login,\n          saveUser: props.saveUser,\n          valueUser: props.valueUser,\n          toggleAlreadySet: toggleAlreadySet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FriendAdd, {\n          setNewFriend: props.setNewFriend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginToggle\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleToggle,\n            className: \"loginToggle\",\n            children: \"Toggle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logins\",\n          children: [/*#__PURE__*/_jsxDEV(FriendAdd, {\n            toggleFriendAdded: props.toggleFriendAdded,\n            setNewFriend: props.setNewFriend,\n            user: props.valueUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logoutButton\",\n            onClick: logOutOnClick,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginToggle\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleToggle,\n      className: \"loginToggle\",\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"xJujmSERu/VqUQbIBHNpSkLYPgA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/Login.tsx"],"names":["React","useState","FriendAdd","LoginInputs","Login","props","console","log","localStorage","getItem","isSet","undefined","storedUser","visible","setLoginVisibility","alreadySent","setAlreadySent","storeUser","handleToggle","toggleAlreadySet","logOut","saveUser","logOutOnClick","removeItem","login","valueUser","setNewFriend","toggleFriendAdded"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport FriendAdd from './FriendAdd'\nimport LoginInputs from './LoginInputs'\n\n\nexport const Login = (props: any) => {\n  console.log(\"Login: localStorage: \", localStorage.getItem(\"user\"))\n  const isSet = localStorage.getItem(\"user\") === undefined\n  const storedUser = localStorage.getItem(\"user\")\n  const [visible, setLoginVisibility] = useState(false)\n  const [alreadySent, setAlreadySent] = useState(!isSet)\n\n  props.storeUser(storedUser)\n  const handleToggle = () => {\n    setLoginVisibility(!visible)\n  }\n  const toggleAlreadySet = () => {\n    setAlreadySent(!alreadySent)\n  }\n\n  const logOut = () => {\n    props.saveUser(undefined)\n  }\n\n  const logOutOnClick = () => {\n    localStorage.removeItem(\"user\")\n    logOut()\n    toggleAlreadySet()\n  }\n\n  if (visible) {\n    console.log(\"Login: alreadySent, storedUser: \", alreadySent, storedUser)\n    if (!alreadySent || storedUser === \"undefined\") {\n      return (\n        <div className=\"loginDiv\">\n          <div className=\"loginToggle\">\n            <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >Toggle</button>\n          </div>\n          <LoginInputs login={props.login} saveUser={props.saveUser} valueUser={props.valueUser} toggleAlreadySet={toggleAlreadySet} />\n          <FriendAdd setNewFriend={props.setNewFriend} />\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"loginDiv\">\n          <div className=\"loginToggle\">\n            <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >Toggle</button>\n          </div>\n          <div className=\"logins\">\n            <FriendAdd toggleFriendAdded={props.toggleFriendAdded} setNewFriend={props.setNewFriend} user={props.valueUser} />\n            <button className=\"logoutButton\" onClick={logOutOnClick}>Logout</button>\n          </div>\n        </div>\n      )\n    }\n  }\n  return (\n    <div className=\"loginToggle\">\n      <button type=\"button\" onClick={handleToggle} className=\"loginToggle\" >Toggle</button>\n    </div>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}