{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { UserLogin } from './requests.jsx';\n\nconst LoginInputs = props => {\n  _s();\n\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"));\n  const [finalUser, setFinalUser] = useState(\"\");\n  const [finalPassword, setFinalPassword] = useState(\"\");\n  const [userWarning, setUserWarning] = useState(false);\n  const [passwordWarning, setPasswordWarning] = useState(false);\n  const [storePassword, setStorePassword] = useState(localStorage.getItem(\"user\"));\n  const [checkUser, setCheckUser] = useState({\n    user: \"\",\n    pass: \"\"\n  });\n\n  const handleRegister = event => {\n    setStorePassword(event.target.value);\n  };\n\n  const handleLogin = event => {\n    setStoreUser(event.target.value);\n  };\n\n  var DoesExist;\n  var {\n    succesfullLogin\n  } = UserLogin(storeUser, storePassword);\n\n  const sendLogin = () => {\n    setFinalUser(storeUser);\n\n    if (succesfullLogin) {\n      console.log(\"LoginInputs: SendInput: DoesExist \", DoesExist);\n      props.login(storeUser);\n      props.setAlreadySet();\n      DoesExist = false;\n    } else {\n      setPasswordWarning(true);\n      setUserWarning(false);\n    }\n  };\n\n  console.log(succesfullLogin);\n\n  const sendRegister = () => {\n    if (!DoesExist) {\n      setUserWarning(false);\n      console.log(\"LoginInputs: SendInput: DoesExist \", DoesExist);\n      props.saveUser(storeUser, storePassword);\n      props.setAlreadySet();\n      DoesExist = false;\n    } else {\n      setUserWarning(true);\n      setPasswordWarning(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logins\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleLogin,\n      className: \"loginTextInput\",\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleRegister,\n      className: \"loginTextInput\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: sendLogin,\n      className: \"loginButtons\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: sendRegister,\n      className: \"loginButtons\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userExistsWarning\",\n      children: [\" \", userWarning ? \"User already exists ❌\" : \"\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userExistsWarning\",\n      children: [\" \", passwordWarning ? \"Wrong Password or username ❌\" : \"\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginInputs, \"mXqO/NWnWiMBnLYLRpRExtcQaDY=\");\n\n_c = LoginInputs;\nexport default LoginInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInputs\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx"],"names":["React","useState","UserLogin","LoginInputs","props","storeUser","setStoreUser","localStorage","getItem","finalUser","setFinalUser","finalPassword","setFinalPassword","userWarning","setUserWarning","passwordWarning","setPasswordWarning","storePassword","setStorePassword","checkUser","setCheckUser","user","pass","handleRegister","event","target","value","handleLogin","DoesExist","succesfullLogin","sendLogin","console","log","login","setAlreadySet","sendRegister","saveUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { DoesUserExist, UserLogin } from './requests.jsx'\n\nconst LoginInputs = (props: any) => {\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"))\n  const [finalUser, setFinalUser] = useState(\"\")\n  const [finalPassword, setFinalPassword] = useState(\"\")\n  const [userWarning, setUserWarning] = useState(false)\n  const [passwordWarning, setPasswordWarning] = useState(false)\n  const [storePassword, setStorePassword] = useState(localStorage.getItem(\"user\"))\n  const [checkUser, setCheckUser] = useState({ user: \"\", pass: \"\" })\n  const handleRegister = (event: any) => {\n    setStorePassword(event.target.value)\n  }\n\n  const handleLogin = (event: any) => {\n    setStoreUser(event.target.value)\n  }\n\n  var DoesExist: boolean\n  var { succesfullLogin } = UserLogin(storeUser, storePassword)\n  const sendLogin = () => {\n    setFinalUser(storeUser)\n    if (succesfullLogin) {\n      console.log(\"LoginInputs: SendInput: DoesExist \", DoesExist)\n      props.login(storeUser)\n      props.setAlreadySet()\n      DoesExist = false\n    } else {\n      setPasswordWarning(true)\n      setUserWarning(false)\n    }\n  }\n  console.log(succesfullLogin)\n  const sendRegister = () => {\n    if (!DoesExist) {\n      setUserWarning(false)\n      console.log(\"LoginInputs: SendInput: DoesExist \", DoesExist)\n      props.saveUser(storeUser, storePassword)\n      props.setAlreadySet()\n      DoesExist = false\n    } else {\n      setUserWarning(true)\n      setPasswordWarning(false)\n    }\n  }\n\n  return (\n    <div className=\"logins\">\n      <input type=\"text\" onChange={handleLogin} className=\"loginTextInput\" placeholder=\"Username\"></input>\n      <input type=\"text\" onChange={handleRegister} className=\"loginTextInput\" placeholder=\"Password\"></input>\n      <button type=\"button\" onClick={sendLogin} className=\"loginButtons\">Login</button>\n      <button type=\"button\" onClick={sendRegister} className=\"loginButtons\">Register</button>\n      {/* TODO: make this just change a color */}\n      <span className=\"userExistsWarning\"> {userWarning ? \"User already exists ❌\" : \"\"} </span>\n      <span className=\"userExistsWarning\"> {passwordWarning ? \"Wrong Password or username ❌\" : \"\"} </span>\n    </div>\n  )\n}\n\nexport default LoginInputs\n"]},"metadata":{},"sourceType":"module"}