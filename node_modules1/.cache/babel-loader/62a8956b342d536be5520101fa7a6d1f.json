{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nconst url = 'http://192.168.0.16:5000/';\nconst headersContent = {// \"Access-Control-Allow-Credentials\": \"true\",\n  // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n  // \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\n  // \"Access-Control-Max-Age\": \"1000\",\n  // \"Access-Control-Allow-Headers\": \"x-requested-with, Content-Type, origin, authorization, accept, client-security-token\",\n  // \"Content-Type\": \"application/json\"\n};\nexport const useFetch = () => {\n  _s();\n\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json);\n      setState({\n        data: json,\n        loading: false\n      });\n    });\n  }, []);\n  return state;\n};\n\n_s(useFetch, \"B9MLtoBjRJNFLzBgeci+fkFmQTk=\");\n\nexport const PostRequest = (userContent, reciverContent, textContent) => {\n  console.log(\"This is the texxt content: \" + textContent);\n  var bodyContent = {\n    sender: userContent,\n    receiver: reciverContent,\n    content: textContent\n  };\n  fetch(url + \"addmessage\", {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(\"PostRequest: \", resJson);\n    return resJson;\n  });\n};\n_c = PostRequest;\nexport const DoesUserExist = (newUser, finalUser) => {\n  _s2();\n\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({\n    DoesExist: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      name: newUser\n    };\n    console.log(\"DoesUserExist: bodyContent: \", bodyContent, currentUser, newUser);\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, finalUser);\n      setState({\n        DoesExist: json,\n        loading: false\n      });\n    });\n  }, [finalUser]);\n  return state;\n};\n\n_s2(DoesUserExist, \"7bHemXtqxBDCcuv6gcrggoHP0rI=\");\n\n_c2 = DoesUserExist;\nexport const GetWithFilter = (filterSender, filterReceiver) => {\n  _s3();\n\n  const url = 'http://localhost:5000/getwithfilter';\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      sender: filterSender,\n      receiver: filterReceiver\n    };\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetWithFilter: json data: \", json);\n      setState({\n        data: json,\n        loading: false\n      });\n    });\n  }, [filterReceiver, filterSender]);\n  return state;\n};\n\n_s3(GetWithFilter, \"B9MLtoBjRJNFLzBgeci+fkFmQTk=\");\n\n_c3 = GetWithFilter;\nexport const AddFriend = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriend'; // var jsonData\n\n  var bodyContent = {\n    user: userContent,\n    newFriend: newFriendContent\n  };\n  console.log(\"AddFriend: \", bodyContent);\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriend: \", json);\n    return json;\n  });\n};\n_c4 = AddFriend;\nexport const AddUser = user => {\n  const url = 'http://192.168.0.16:5000/adduser';\n  var bodyContent = {\n    name: user\n  };\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n    console.log(\"AddUser: \", json);\n    return json;\n  });\n};\n_c5 = AddUser;\nexport const GetFriends = (user, friendAdded) => {\n  _s4();\n\n  const url = 'http://192.168.0.16:5000/getfriends';\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    };\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriends: \", json);\n      setState({\n        data: json,\n        loading: false\n      });\n    });\n  }, [user, friendAdded]);\n  return state;\n};\n\n_s4(GetFriends, \"B9MLtoBjRJNFLzBgeci+fkFmQTk=\");\n\n_c6 = GetFriends;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PostRequest\");\n$RefreshReg$(_c2, \"DoesUserExist\");\n$RefreshReg$(_c3, \"GetWithFilter\");\n$RefreshReg$(_c4, \"AddFriend\");\n$RefreshReg$(_c5, \"AddUser\");\n$RefreshReg$(_c6, \"GetFriends\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/requests.jsx"],"names":["useEffect","useState","url","headersContent","useFetch","state","setState","data","loading","fetch","then","text","JSON","parse","json","console","log","PostRequest","userContent","reciverContent","textContent","bodyContent","sender","receiver","content","method","headers","credentials","body","stringify","res","resJson","DoesUserExist","newUser","finalUser","DoesExist","name","currentUser","GetWithFilter","filterSender","filterReceiver","AddFriend","newFriendContent","user","newFriend","AddUser","GetFriends","friendAdded"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst url = 'http://192.168.0.16:5000/';\nconst headersContent = {\n  // \"Access-Control-Allow-Credentials\": \"true\",\n  // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n  // \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\n  // \"Access-Control-Max-Age\": \"1000\",\n  // \"Access-Control-Allow-Headers\": \"x-requested-with, Content-Type, origin, authorization, accept, client-security-token\",\n  // \"Content-Type\": \"application/json\"\n}\n\nexport const useFetch = () => {\n  const [state, setState] = useState({data: null, loading: true})\n\n  useEffect(() => {\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json)\n      setState({data: json, loading: false})\n    })\n  }, [])\n  return state\n}\n\nexport const PostRequest = (userContent, reciverContent, textContent) => {\n  console.log(\"This is the texxt content: \" + textContent)\n  var bodyContent = {\n    sender: userContent,\n    receiver: reciverContent,\n    content: textContent\n  }\n  fetch(url + \"addmessage\", {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(\"PostRequest: \", resJson)\n    return resJson\n  })\n}\n\nexport const DoesUserExist = (newUser, finalUser) => {\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({DoesExist: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: newUser\n    }\n    console.log(\"DoesUserExist: bodyContent: \", bodyContent, currentUser, newUser)\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, finalUser)\n      setState({DoesExist: json, loading: false})\n    })\n  }, [finalUser])\n  return state\n}\n\nexport const GetWithFilter = (filterSender, filterReceiver) => {\n  const url = 'http://localhost:5000/getwithfilter';\n  const [state, setState] = useState({data: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      sender: filterSender,\n      receiver: filterReceiver\n    }\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetWithFilter: json data: \", json)\n      setState({data: json, loading: false})\n    })\n  }, [filterReceiver, filterSender])\n  return state\n}\n\nexport const AddFriend = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriend';\n  // var jsonData\n  var bodyContent = {\n    user: userContent,\n    newFriend: newFriendContent\n  }\n\n  console.log(\"AddFriend: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriend: \", json)\n    return json\n  })\n}\n\nexport const AddUser = (user) => {\n  const url = 'http://192.168.0.16:5000/adduser';\n  var bodyContent = {\n    name: user\n  }\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n    console.log(\"AddUser: \", json)\n    return json\n  })\n}\n\nexport const GetFriends = (user, friendAdded) => {\n  const url = 'http://192.168.0.16:5000/getfriends';\n  const [state, setState] = useState({data: null, loading: true})\n\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriends: \", json)\n      setState({data: json, loading: false})\n    })\n  }, [user, friendAdded])\n\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}