{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-project/src/Logo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { UploadProfileImage, GetProfileImage } from './requests.jsx';\nimport Croper from './Croper';\n\nconst Logo = props => {\n  _s();\n\n  const [image, setImage] = useState(null);\n  var {\n    picture\n  } = GetProfileImage(props.valueUser);\n  useEffect(() => {\n    if (props.valueUser != null) {\n      setImage(picture);\n    }\n  }, [picture]);\n\n  const sendFile = () => {\n    UploadProfileImage(props.valueUser, image);\n  };\n\n  const handleFile = e => {\n    let image = e.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(image);\n\n    reader.onload = e => {\n      let base64 = e.target.result;\n      console.log(base64);\n      setImage(base64);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      className: \"profileImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Resise your image \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"closeHeaderButton\",\n          onClick: sendFile,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFile,\n          className: \"changeProfileImage\",\n          name: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: sendFile,\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"croper\",\n          children: /*#__PURE__*/_jsxDEV(Croper, {\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logo, \"dGVwJEArO+c3odeDsBUMrBRJ/DQ=\");\n\n_c = Logo;\nexport default Logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-project/src/Logo.tsx"],"names":["React","useState","useEffect","UploadProfileImage","GetProfileImage","Croper","Logo","props","image","setImage","picture","valueUser","sendFile","handleFile","e","target","files","reader","FileReader","readAsDataURL","onload","base64","result","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,gBAApD;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAgB;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEA,MAAI;AAAES,IAAAA;AAAF,MAAcN,eAAe,CAACG,KAAK,CAACI,SAAP,CAAjC;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,CAACI,SAAN,IAAmB,IAAvB,EAA6B;AAC3BF,MAAAA,QAAQ,CAACC,OAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;;AAKA,QAAME,QAAQ,GAAG,MAAM;AACrBT,IAAAA,kBAAkB,CAACI,KAAK,CAACI,SAAP,EAAkBH,KAAlB,CAAlB;AACD,GAFD;;AAIA,QAAMK,UAAU,GAAIC,CAAD,IAAY;AAC7B,QAAIN,KAAK,GAAGM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AAEA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBX,KAArB;;AACAS,IAAAA,MAAM,CAACG,MAAP,GAAiBN,CAAD,IAAY;AAC1B,UAAIO,MAAM,GAAGP,CAAC,CAACC,MAAF,CAASO,MAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAZ,MAAAA,QAAQ,CAACY,MAAD,CAAR;AACD,KAJD;AAKD,GAVD;;AAYA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEb,KAAV;AAAiB,MAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,mBAAhC;AAAoD,UAAA,OAAO,EAAEI,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEC,UAA7B;AAAyC,UAAA,SAAS,EAAC,oBAAnD;AAAwE,UAAA,IAAI,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAED,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3CD;;GAAMF,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { UploadProfileImage, GetProfileImage } from './requests.jsx'\nimport Croper from './Croper'\nconst Logo = (props: any) => {\n  const [image, setImage] = useState(null)\n\n  var { picture } = GetProfileImage(props.valueUser)\n  useEffect(() => {\n    if (props.valueUser != null) {\n      setImage(picture)\n    }\n  }, [picture])\n  const sendFile = () => {\n    UploadProfileImage(props.valueUser, image)\n  }\n\n  const handleFile = (e: any) => {\n    let image = e.target.files[0]\n\n    let reader = new FileReader()\n    reader.readAsDataURL(image)\n    reader.onload = (e: any) => {\n      let base64 = e.target.result\n      console.log(base64)\n      setImage(base64)\n    }\n  }\n\n  return (\n    <div>\n      <img src={image} className=\"profileImage\" ></img>\n      <div className=\"modal\">\n        <div className=\"modalHeader\">\n          <h3> Resise your image </h3>\n          <button type=\"button\" className=\"closeHeaderButton\" onClick={sendFile}>&times;</button>\n        </div>\n        <div className=\"modalBody\">\n          <input type=\"file\" onChange={handleFile} className=\"changeProfileImage\" name=\"image\" />\n          <button type=\"button\" onClick={sendFile}>Upload File</button>\n          <div className=\"croper\">\n            <Croper image={image} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Logo\n"]},"metadata":{},"sourceType":"module"}