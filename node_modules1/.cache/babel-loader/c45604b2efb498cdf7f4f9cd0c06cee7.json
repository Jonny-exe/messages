{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport SendInput from './SendInputs';\nimport MessagesAll from './MessagesAll';\nimport Login from './Login';\nimport Friends from './Friends';\nimport { AddUser } from './requests.jsx';\n\nconst App = () => {\n  _s();\n\n  // postRequest(\"this is the test\", \"this is the new test\")\n  const [user, setUser] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [friendAdded, setFriendAdded] = useState(false); //This is just a value to toggle when a friend gets added so the apt gets fetched\n\n  const toggleFriendAdded = () => {\n    setFriendAdded(!friendAdded);\n  };\n\n  const storeUser = userName => {\n    localStorage.setItem(\"user\", userName);\n    setUser(userName);\n  };\n\n  const saveUser = (username, password) => {\n    storeUser(username);\n    AddUser(username, password);\n  };\n\n  const login = username => {\n    storeUser(username);\n  };\n\n  const logOut = () => {\n    console.log(\"App: logOut\");\n    setUser(undefined);\n  };\n\n  const setReceiverFunc = name => {\n    setReceiver(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friends\",\n        children: /*#__PURE__*/_jsxDEV(Friends, {\n          friendAdded: friendAdded,\n          valueUser: user,\n          setReceiver: setReceiverFunc,\n          valueReceiver: receiver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [/*#__PURE__*/_jsxDEV(MessagesAll, {\n          valueUser: user,\n          sender: user,\n          receiver: receiver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SendInput, {\n          valueUser: user,\n          receiver: receiver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float\",\n        children: [/*#__PURE__*/_jsxDEV(Login, {\n          login: login,\n          logOut: logOut,\n          toggleFriendAdded: toggleFriendAdded,\n          storeUser: storeUser,\n          saveUser: saveUser,\n          valueUser: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"b5LpWdPCfP8tRb7cWQd51btiqQ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/App.tsx"],"names":["React","useState","SendInput","MessagesAll","Login","Friends","AddUser","App","user","setUser","receiver","setReceiver","friendAdded","setFriendAdded","toggleFriendAdded","storeUser","userName","localStorage","setItem","saveUser","username","password","login","logOut","console","log","undefined","setReceiverFunc","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C,CAJgB,CAIsC;;AAEtD,QAAMa,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAIA,QAAMG,SAAS,GAAIC,QAAD,IAAsB;AACtCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,QAA7B;AACAP,IAAAA,OAAO,CAACO,QAAD,CAAP;AACD,GAHD;;AAKA,QAAMG,QAAQ,GAAG,CAACC,QAAD,EAAmBC,QAAnB,KAAwC;AACvDN,IAAAA,SAAS,CAACK,QAAD,CAAT;AACAd,IAAAA,OAAO,CAACc,QAAD,EAAWC,QAAX,CAAP;AACD,GAHD;;AAMA,QAAMC,KAAK,GAAIF,QAAD,IAAsB;AAClCL,IAAAA,SAAS,CAACK,QAAD,CAAT;AACD,GAFD;;AAIA,QAAMG,MAAM,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAhB,IAAAA,OAAO,CAACiB,SAAD,CAAP;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAIC,IAAD,IAAkB;AACxCjB,IAAAA,WAAW,CAACiB,IAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,WAAW,EAAEhB,WAAtB;AAAmC,UAAA,SAAS,EAAEJ,IAA9C;AAAoD,UAAA,WAAW,EAAEmB,eAAjE;AAAkF,UAAA,aAAa,EAAEjB;AAAjG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEF,IAAxB;AAA8B,UAAA,MAAM,EAAEA,IAAtC;AAA4C,UAAA,QAAQ,EAAEE;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEF,IAAtB;AAA4B,UAAA,QAAQ,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEY,KAAd;AAAqB,UAAA,MAAM,EAAEC,MAA7B;AAAqC,UAAA,iBAAiB,EAAET,iBAAxD;AAA2E,UAAA,SAAS,EAAEC,SAAtF;AAAiG,UAAA,QAAQ,EAAEI,QAA3G;AAAqH,UAAA,SAAS,EAAEX;AAAhI;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlDD;;GAAMD,G;;KAAAA,G;AAoDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\nimport SendInput from './SendInputs'\nimport MessagesAll from './MessagesAll'\nimport Login from './Login'\nimport Friends from './Friends'\nimport { AddUser } from './requests.jsx'\n\nconst App = () => {\n  // postRequest(\"this is the test\", \"this is the new test\")\n  const [user, setUser] = useState(\"\")\n  const [receiver, setReceiver] = useState(\"\")\n  const [friendAdded, setFriendAdded] = useState(false) //This is just a value to toggle when a friend gets added so the apt gets fetched\n\n  const toggleFriendAdded = () => {\n    setFriendAdded(!friendAdded)\n  }\n\n  const storeUser = (userName: string) => {\n    localStorage.setItem(\"user\", userName)\n    setUser(userName)\n  }\n\n  const saveUser = (username: string, password: string) => {\n    storeUser(username)\n    AddUser(username, password)\n  }\n\n\n  const login = (username: string) => {\n    storeUser(username)\n  }\n\n  const logOut = () => {\n    console.log(\"App: logOut\")\n    setUser(undefined)\n  }\n\n  const setReceiverFunc = (name: string) => {\n    setReceiver(name)\n  }\n\n  return (\n    <div>\n      <div className=\"app\">\n        <div className=\"friends\">\n          <Friends friendAdded={friendAdded} valueUser={user} setReceiver={setReceiverFunc} valueReceiver={receiver} />\n        </div>\n        <div className=\"messages\">\n          <MessagesAll valueUser={user} sender={user} receiver={receiver} />\n          <SendInput valueUser={user} receiver={receiver} />\n        </div>\n        <div className=\"float\">\n          <Login login={login} logOut={logOut} toggleFriendAdded={toggleFriendAdded} storeUser={storeUser} saveUser={saveUser} valueUser={user} />  {/* This makes it possible to speak from child to child. Pases data: user from login to sendInput*/}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}