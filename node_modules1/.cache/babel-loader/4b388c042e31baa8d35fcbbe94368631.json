{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-project/src/Logo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { UploadProfileImage, GetProfileImage } from './requests.jsx';\nimport Croper from './Croper';\n\nvar fs = require('fs');\n\nvar gm = require('gm');\n\nconst Logo = props => {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [modal, setModal] = useState(false);\n  var {\n    picture\n  } = GetProfileImage(props.valueUser);\n  useEffect(() => {\n    if (props.valueUser != null) {\n      setImage(picture);\n    }\n  }, [picture]);\n\n  const sendFile = () => {\n    UploadProfileImage(props.valueUser, image);\n  };\n\n  const handleFile = e => {\n    let image = e.target.files[0];\n    gm('/path/to/my/img.jpg').crop(240, 240).write('/path/to/resize.png', function (err) {\n      if (!err) console.log('done');\n    });\n    let reader = new FileReader();\n    console.log(\"Logo: image\", image);\n    reader.readAsDataURL(image);\n\n    reader.onload = e => {\n      let base64 = e.target.result;\n      console.log(base64);\n      setImage(base64);\n    };\n  };\n\n  const imageOnClick = () => {\n    console.log(\"Logo: imageOnClick: modal\", true);\n    setModal(true);\n  };\n\n  const closeModal = () => {\n    console.log(\"Logo: imageOnClick: modal\", false);\n    setModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `overlay ${modal ? \"overlayActive\" : \"\"}`,\n      onClick: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      onClick: imageOnClick,\n      className: \"profileImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal ${modal ? \"modalActive\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Resise your image \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"closeHeaderButton\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFile,\n          className: \"changeProfileImage\",\n          name: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: sendFile,\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"croper\",\n          children: /*#__PURE__*/_jsxDEV(Croper, {\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logo, \"rKcLTI3G/trF/cBRSLc92v4hjyk=\");\n\n_c = Logo;\nexport default Logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-project/src/Logo.tsx"],"names":["React","useState","useEffect","UploadProfileImage","GetProfileImage","Croper","fs","require","gm","Logo","props","image","setImage","modal","setModal","picture","valueUser","sendFile","handleFile","e","target","files","crop","write","err","console","log","reader","FileReader","readAsDataURL","onload","base64","result","imageOnClick","closeModal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { UploadProfileImage, GetProfileImage } from './requests.jsx'\nimport Croper from './Croper'\nvar fs = require('fs')\nvar gm = require('gm');\nconst Logo = (props: any) => {\n  const [image, setImage] = useState(null)\n  const [modal, setModal] = useState(false)\n\n  var { picture } = GetProfileImage(props.valueUser)\n  useEffect(() => {\n    if (props.valueUser != null) {\n      setImage(picture)\n    }\n  }, [picture])\n  const sendFile = () => {\n    UploadProfileImage(props.valueUser, image)\n  }\n\n  const handleFile = (e: any) => {\n    let image = e.target.files[0]\n    gm('/path/to/my/img.jpg')\n      .crop(240, 240)\n      .write('/path/to/resize.png', function(err: Error) {\n        if (!err) console.log('done');\n      });\n\n    let reader = new FileReader()\n    console.log(\"Logo: image\", image)\n    reader.readAsDataURL(image)\n    reader.onload = (e: any) => {\n      let base64 = e.target.result\n      console.log(base64)\n      setImage(base64)\n    }\n  }\n\n  const imageOnClick = () => {\n    console.log(\"Logo: imageOnClick: modal\", true)\n    setModal(true)\n  }\n\n  const closeModal = () => {\n    console.log(\"Logo: imageOnClick: modal\", false)\n    setModal(false)\n  }\n\n\n  return (\n    <div>\n      <div className={`overlay ${modal ? \"overlayActive\" : \"\"}`} onClick={closeModal}>\n      </div>\n      <img src={image} onClick={imageOnClick} className=\"profileImage\" ></img>\n      <div className={`modal ${modal ? \"modalActive\" : \"\"}`}>\n        <div className=\"modalHeader\">\n          <h3> Resise your image </h3>\n          <button type=\"button\" className=\"closeHeaderButton\" onClick={closeModal}>&times;</button>\n        </div>\n        <div className=\"modalBody\">\n          <input type=\"file\" onChange={handleFile} className=\"changeProfileImage\" name=\"image\" />\n          <button type=\"button\" onClick={sendFile}>Upload File</button>\n          <div className=\"croper\">\n            <Croper image={image} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Logo\n"]},"metadata":{},"sourceType":"module"}