{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-project/src/Logo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { UploadProfileImage, GetProfileImage } from './requests.jsx';\n\nconst Logo = props => {\n  _s();\n\n  const [image, setImage] = useState(null);\n  var {\n    picture\n  } = GetProfileImage(props.valueUser);\n  useEffect(() => {\n    if (props.valueUser != null) {\n      setImage(picture);\n    }\n  }, [picture]);\n\n  const sendFile = () => {\n    UploadProfileImage(props.valueUser, image);\n  };\n\n  const handleFile = e => {\n    let image = e.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(image);\n\n    reader.onload = e => {\n      setImage(e.target.result);\n      console.log(e.target.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      className: \"profileImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFile,\n      className: \"changeProfileImage\",\n      name: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: sendFile,\n      value: \"upload file..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logo, \"dGVwJEArO+c3odeDsBUMrBRJ/DQ=\");\n\n_c = Logo;\nexport default Logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-project/src/Logo.tsx"],"names":["React","useState","useEffect","UploadProfileImage","GetProfileImage","Logo","props","image","setImage","picture","valueUser","sendFile","handleFile","e","target","files","reader","FileReader","readAsDataURL","onload","result","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,gBAApD;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAgB;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEA,MAAI;AAAEQ,IAAAA;AAAF,MAAcL,eAAe,CAACE,KAAK,CAACI,SAAP,CAAjC;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACI,SAAN,IAAmB,IAAvB,EAA6B;AAC3BF,MAAAA,QAAQ,CAACC,OAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;;AAKA,QAAME,QAAQ,GAAG,MAAM;AACrBR,IAAAA,kBAAkB,CAACG,KAAK,CAACI,SAAP,EAAkBH,KAAlB,CAAlB;AACD,GAFD;;AAIA,QAAMK,UAAU,GAAIC,CAAD,IAAY;AAC7B,QAAIN,KAAK,GAAGM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBX,KAArB;;AACAS,IAAAA,MAAM,CAACG,MAAP,GAAiBN,CAAD,IAAY;AAC1BL,MAAAA,QAAQ,CACNK,CAAC,CAACC,MAAF,CAASM,MADH,CAAR;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACC,MAAF,CAASM,MAArB;AACD,KALD;AAMD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEb,KAAV;AAAiB,MAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEK,UAA7B;AAAyC,MAAA,SAAS,EAAC,oBAAnD;AAAwE,MAAA,IAAI,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAED,QAA/B;AAAyC,MAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhCD;;GAAMN,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { UploadProfileImage, GetProfileImage } from './requests.jsx'\n\nconst Logo = (props: any) => {\n  const [image, setImage] = useState(null)\n\n  var { picture } = GetProfileImage(props.valueUser)\n  useEffect(() => {\n    if (props.valueUser != null) {\n      setImage(picture)\n    }\n  }, [picture])\n  const sendFile = () => {\n    UploadProfileImage(props.valueUser, image)\n  }\n\n  const handleFile = (e: any) => {\n    let image = e.target.files[0]\n    let reader = new FileReader()\n    reader.readAsDataURL(image)\n    reader.onload = (e: any) => {\n      setImage(\n        e.target.result\n      )\n      console.log(e.target.result)\n    }\n  }\n\n  return (\n    <div className=\"profile\">\n      <img src={image} className=\"profileImage\" />\n        <input type=\"file\" onChange={handleFile} className=\"changeProfileImage\" name=\"image\" />\n        <button type=\"button\" onClick={sendFile} value=\"upload file..\" />\n    </div>\n  )\n}\n\nexport default Logo\n"]},"metadata":{},"sourceType":"module"}