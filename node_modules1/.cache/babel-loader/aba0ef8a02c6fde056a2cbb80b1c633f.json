{"ast":null,"code":"module.exports = function series(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context;\n      context = null;\n    } else {\n      callback = noop;\n    }\n  }\n\n  if (!(fns && fns.length)) return callback();\n  fns = fns.slice(0);\n  var call = context ? function () {\n    fns.length ? fns.shift().call(context, next) : callback();\n  } : function () {\n    fns.length ? fns.shift()(next) : callback();\n  };\n  call();\n\n  function next(err) {\n    err ? callback(err) : call();\n  }\n};\n\nfunction noop() {}","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-project/node_modules/array-series/index.js"],"names":["module","exports","series","fns","context","callback","noop","length","slice","call","shift","next","err"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwC;AACvD,MAAI,CAACA,QAAL,EAAe;AACb,QAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,MAAAA,QAAQ,GAAGD,OAAX;AACAA,MAAAA,OAAO,GAAG,IAAV;AACD,KAHD,MAGO;AACLC,MAAAA,QAAQ,GAAGC,IAAX;AACD;AACF;;AAED,MAAI,EAAEH,GAAG,IAAIA,GAAG,CAACI,MAAb,CAAJ,EAA0B,OAAOF,QAAQ,EAAf;AAE1BF,EAAAA,GAAG,GAAGA,GAAG,CAACK,KAAJ,CAAU,CAAV,CAAN;AAEA,MAAIC,IAAI,GAAGL,OAAO,GAChB,YAAY;AACZD,IAAAA,GAAG,CAACI,MAAJ,GACIJ,GAAG,CAACO,KAAJ,GAAYD,IAAZ,CAAiBL,OAAjB,EAA0BO,IAA1B,CADJ,GAEIN,QAAQ,EAFZ;AAGD,GALiB,GAMhB,YAAY;AACZF,IAAAA,GAAG,CAACI,MAAJ,GACIJ,GAAG,CAACO,KAAJ,GAAYC,IAAZ,CADJ,GAEIN,QAAQ,EAFZ;AAGD,GAVD;AAYAI,EAAAA,IAAI;;AAEJ,WAASE,IAAT,CAAcC,GAAd,EAAmB;AACjBA,IAAAA,GAAG,GAAGP,QAAQ,CAACO,GAAD,CAAX,GAAmBH,IAAI,EAA1B;AACD;AACF,CA/BD;;AAiCA,SAASH,IAAT,GAAgB,CAAE","sourcesContent":["module.exports = function series(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  if (!(fns && fns.length)) return callback();\n\n  fns = fns.slice(0)\n\n  var call = context\n  ? function () {\n    fns.length\n      ? fns.shift().call(context, next)\n      : callback()\n  }\n  : function () {\n    fns.length\n      ? fns.shift()(next)\n      : callback()\n  }\n\n  call()\n\n  function next(err) {\n    err ? callback(err) : call()\n  }\n}\n\nfunction noop() {}\n"]},"metadata":{},"sourceType":"script"}