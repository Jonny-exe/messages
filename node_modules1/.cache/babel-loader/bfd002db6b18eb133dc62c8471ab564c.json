{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nconst url = 'http://192.168.0.16:5000/';\nconst headersContent = {// \"Access-Control-Allow-Credentials\": \"true\",\n  // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n  // \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\n  // \"Access-Control-Max-Age\": \"1000\",\n  // \"Access-Control-Allow-Headers\": \"x-requested-with, Content-Type, origin, authorization, accept, client-security-token\",\n  // \"Content-Type\": \"application/json\"\n};\nexport const useFetch = () => {\n  _s();\n\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json);\n      setState({\n        data: json,\n        loading: false\n      });\n    });\n  }, []);\n  return state;\n};\n\n_s(useFetch, \"B9MLtoBjRJNFLzBgeci+fkFmQTk=\");\n\nexport const PostRequest = (userContent, reciverContent, textContent) => {\n  console.log(\"This is the texxt content: \" + textContent);\n  var bodyContent = {\n    sender: userContent,\n    receiver: reciverContent,\n    content: textContent\n  };\n  fetch(url + \"addmessage\", {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(\"PostRequest: \", resJson);\n    return resJson;\n  });\n};\n_c = PostRequest;\nexport const DoesUserExist = newUser => {\n  _s2();\n\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({\n    doesUserExist: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      name: newUser\n    };\n    console.log(\"DoesUserExist: bodyContent: \", bodyContent, newUser);\n    setState(state => ({\n      doesUserExist: state.doesUserExist,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, newUser);\n      setState({\n        doesUserExist: json,\n        loading: false\n      });\n    });\n  }, [newUser]);\n  return state;\n};\n\n_s2(DoesUserExist, \"+dh4gf+Xz5Z2RWjTMSqsUsE8VFc=\");\n\n_c2 = DoesUserExist;\nexport const GetFriendRequests = user => {\n  _s3();\n\n  const url = 'http://localhost:5000/getfriendrequests';\n  const [state, setState] = useState({\n    requests: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    };\n    console.log(\"GetFriendRequests: bodyContent: \", bodyContent);\n    setState(state => ({\n      requests: state.requests,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriendRequests: json data: \", json);\n      setState({\n        requests: json,\n        loading: false\n      });\n    });\n  }, []);\n  return state;\n};\n\n_s3(GetFriendRequests, \"NoyGX1EfMw9acrAEmIZIHQLZ3Ss=\");\n\n_c3 = GetFriendRequests;\nexport const GetWithFilter = (filterSender, filterReceiver) => {\n  _s4();\n\n  const url = 'http://localhost:5000/getwithfilter';\n  const [state, setState] = useState({\n    messages: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      sender: filterSender,\n      receiver: filterReceiver\n    };\n    setState(state => ({\n      messages: state.messages,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetWithFilter: json data: \", json);\n      setState({\n        messages: json,\n        loading: false\n      });\n    });\n  }, [filterReceiver, filterSender]);\n  return state;\n};\n\n_s4(GetWithFilter, \"5L59oO1RyW/oVS54yvmMosxLZxk=\");\n\n_c4 = GetWithFilter;\nexport const UserLogin = (finalUser, finalPassword) => {\n  _s5();\n\n  const [state, setState] = useState({\n    successfulLogin: null,\n    loading: true\n  });\n  const url = 'http://192.168.0.16:5000/login';\n  useEffect(() => {\n    var bodyContent = {\n      name: finalUser,\n      pass: finalPassword\n    };\n    console.log(\"Login: bodyContent: \", bodyContent);\n    setState(state => ({\n      successfulLogin: state.successfulLogin,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"UserLogin: json data\", json);\n\n      if (json != null) {\n        console.log(\"UserLogin: json set\");\n        setState({\n          successfulLogin: json,\n          loading: false\n        });\n      }\n    });\n  }, [finalPassword]);\n  return state;\n};\n\n_s5(UserLogin, \"FwpYPHBvJyi1N4+fvcei+i/lpMg=\");\n\n_c5 = UserLogin;\nexport const AddFriend = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriend'; // var jsonData\n\n  var bodyContent = {\n    name: userContent,\n    newFriend: newFriendContent\n  };\n  console.log(\"AddFriend: \", bodyContent);\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriend: \", json);\n    return json;\n  });\n};\n_c6 = AddFriend;\nexport const AddFriendRequest = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriendrequest'; // var jsonData\n\n  var bodyContent = {\n    name: userContent,\n    newFriend: newFriendContent\n  };\n  console.log(\"AddFriendRequest: \", bodyContent);\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriendRequest: \", json);\n    return json;\n  });\n};\n_c7 = AddFriendRequest;\nexport const RemoveFriendRequest = (user, friendToRemove) => {\n  const url = 'http://192.168.0.16:5000/removefriendrequest'; // var jsonData\n\n  var bodyContent = {\n    name: user,\n    FriendToRemove: friendToRemove\n  };\n  console.log(\"RemoveFriendRequest: \", bodyContent);\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"RemoveFriendRequest: \", json);\n    return json;\n  });\n};\n_c8 = RemoveFriendRequest;\nexport const AddUser = (username, password) => {\n  // TODO: Maybe this doesnt work without capital letters. Test it\n  const url = 'http://192.168.0.16:5000/adduser';\n  var bodyContent = {\n    name: username,\n    pass: password,\n    friends: [],\n    friendRequests: []\n  };\n  console.log(\"AddUser: bodyContent: \", bodyContent);\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n    console.log(\"AddUser: \", json);\n    return json;\n  });\n};\n_c9 = AddUser;\nexport const GetFriends = (user, friendAdded) => {\n  _s6();\n\n  const url = 'http://192.168.0.16:5000/getfriends';\n  const [state, setState] = useState({\n    friends: null\n  });\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    };\n    setState(state => ({\n      data: state.data\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriends: \", json);\n      setState({\n        friends: json\n      });\n    });\n  }, [user, friendAdded]);\n  return state;\n};\n\n_s6(GetFriends, \"OkInLZesYyfSaTbHkIMZ9R4ew5g=\");\n\n_c10 = GetFriends;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"PostRequest\");\n$RefreshReg$(_c2, \"DoesUserExist\");\n$RefreshReg$(_c3, \"GetFriendRequests\");\n$RefreshReg$(_c4, \"GetWithFilter\");\n$RefreshReg$(_c5, \"UserLogin\");\n$RefreshReg$(_c6, \"AddFriend\");\n$RefreshReg$(_c7, \"AddFriendRequest\");\n$RefreshReg$(_c8, \"RemoveFriendRequest\");\n$RefreshReg$(_c9, \"AddUser\");\n$RefreshReg$(_c10, \"GetFriends\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/requests.jsx"],"names":["useEffect","useState","url","headersContent","useFetch","state","setState","data","loading","fetch","then","text","JSON","parse","json","console","log","PostRequest","userContent","reciverContent","textContent","bodyContent","sender","receiver","content","method","headers","credentials","body","stringify","res","resJson","DoesUserExist","newUser","doesUserExist","name","GetFriendRequests","user","requests","GetWithFilter","filterSender","filterReceiver","messages","UserLogin","finalUser","finalPassword","successfulLogin","pass","AddFriend","newFriendContent","newFriend","AddFriendRequest","RemoveFriendRequest","friendToRemove","FriendToRemove","AddUser","username","password","friends","friendRequests","GetFriends","friendAdded"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst url = 'http://192.168.0.16:5000/';\nconst headersContent = {\n  // \"Access-Control-Allow-Credentials\": \"true\",\n  // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n  // \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\n  // \"Access-Control-Max-Age\": \"1000\",\n  // \"Access-Control-Allow-Headers\": \"x-requested-with, Content-Type, origin, authorization, accept, client-security-token\",\n  // \"Content-Type\": \"application/json\"\n}\n\nexport const useFetch = () => {\n  const [state, setState] = useState({data: null, loading: true})\n\n  useEffect(() => {\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json)\n      setState({data: json, loading: false})\n    })\n  }, [])\n  return state\n}\n\nexport const PostRequest = (userContent, reciverContent, textContent) => {\n  console.log(\"This is the texxt content: \" + textContent)\n  var bodyContent = {\n    sender: userContent,\n    receiver: reciverContent,\n    content: textContent\n  }\n  fetch(url + \"addmessage\", {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(\"PostRequest: \", resJson)\n    return resJson\n  })\n}\n\nexport const DoesUserExist = (newUser) => {\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({doesUserExist: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: newUser\n    }\n    console.log(\"DoesUserExist: bodyContent: \", bodyContent, newUser)\n    setState(state => ({doesUserExist: state.doesUserExist, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, newUser)\n      setState({doesUserExist: json, loading: false})\n    })\n  }, [newUser])\n  return state\n}\n\n\nexport const GetFriendRequests = (user) => {\n  const url = 'http://localhost:5000/getfriendrequests';\n  const [state, setState] = useState({requests: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    console.log(\"GetFriendRequests: bodyContent: \", bodyContent)\n    setState(state => ({requests: state.requests, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriendRequests: json data: \", json)\n      setState({requests: json, loading: false})\n    })\n  }, [])\n  return state\n}\n\nexport const GetWithFilter = (filterSender, filterReceiver) => {\n  const url = 'http://localhost:5000/getwithfilter';\n  const [state, setState] = useState({messages: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      sender: filterSender,\n      receiver: filterReceiver\n    }\n    setState(state => ({messages: state.messages, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetWithFilter: json data: \", json)\n      setState({messages: json, loading: false})\n    })\n  }, [filterReceiver, filterSender])\n  return state\n}\n\nexport const UserLogin = (finalUser, finalPassword) => {\n  const [state, setState] = useState({ successfulLogin: null, loading: true })\n  const url = 'http://192.168.0.16:5000/login';\n  useEffect(() => {\n    var bodyContent = {\n      name: finalUser,\n      pass: finalPassword\n    }\n    console.log(\"Login: bodyContent: \", bodyContent)\n    setState(state => ({ successfulLogin: state.successfulLogin, loading: true }))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"UserLogin: json data\", json)\n      if (json != null) {\n        console.log(\"UserLogin: json set\")\n        setState({ successfulLogin: json, loading: false })\n      }\n    })\n  }, [finalPassword])\n  return state\n}\n\nexport const AddFriend = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriend';\n  // var jsonData\n  var bodyContent = {\n    name: userContent,\n    newFriend: newFriendContent\n  }\n\n  console.log(\"AddFriend: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriend: \", json)\n    return json\n  })\n}\n\nexport const AddFriendRequest = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriendrequest';\n  // var jsonData\n  var bodyContent = {\n    name: userContent,\n    newFriend: newFriendContent\n  }\n\n  console.log(\"AddFriendRequest: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriendRequest: \", json)\n    return json\n  })\n}\n\n\nexport const RemoveFriendRequest = (user, friendToRemove) => {\n  const url = 'http://192.168.0.16:5000/removefriendrequest';\n  // var jsonData\n  var bodyContent = {\n    name: user,\n    FriendToRemove: friendToRemove\n  }\n\n  console.log(\"RemoveFriendRequest: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"RemoveFriendRequest: \", json)\n    return json\n  })\n}\n\n\n\nexport const AddUser = (username, password) => {\n  // TODO: Maybe this doesnt work without capital letters. Test it\n  const url = 'http://192.168.0.16:5000/adduser';\n  var bodyContent = {\n    name: username,\n    pass: password,\n    friends: [],\n    friendRequests: []\n  }\n  console.log(\"AddUser: bodyContent: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n    console.log(\"AddUser: \", json)\n    return json\n  })\n}\n\nexport const GetFriends = (user, friendAdded) => {\n  const url = 'http://192.168.0.16:5000/getfriends';\n  const [state, setState] = useState({friends: null})\n\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    setState(state => ({data: state.data}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriends: \", json)\n      setState({friends: json})\n    })\n  }, [user, friendAdded])\n\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}