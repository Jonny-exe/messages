{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DoesUserExist } from './requests.jsx';\n\nconst LoginInputs = props => {\n  _s();\n\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"));\n  const [userExists, setUserExists] = useState(\"\");\n  const [send, setSend] = useState(fasle);\n\n  const handleInput = event => {\n    setStoreUser(event.target.value);\n  };\n\n  const {\n    data\n  } = DoesUserExist(storeUser);\n\n  const sendInput = () => {\n    console.log(\"this is the new user\" + storeUser);\n\n    if (userExists) {\n      props.saveUser(storeUser);\n      props.setAlreadySet();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logins\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInput,\n      className: \"loginInputs\",\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: sendInput,\n      className: \"loginInputs\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", userExists, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginInputs, \"Uc9D2gd/jKevAZud29yYGjjYl/k=\");\n\n_c = LoginInputs;\nexport default LoginInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInputs\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx"],"names":["React","useState","DoesUserExist","LoginInputs","props","storeUser","setStoreUser","localStorage","getItem","userExists","setUserExists","send","setSend","fasle","handleInput","event","target","value","data","sendInput","console","log","saveUser","setAlreadySet"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAgB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAACM,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAA1C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACY,KAAD,CAAhC;;AACA,QAAMC,WAAW,GAAIC,KAAD,IAAgB;AAClCT,IAAAA,YAAY,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAWhB,aAAa,CAACG,SAAD,CAA9B;;AAEA,QAAMc,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBhB,SAArC;;AACA,QAAII,UAAJ,EAAgB;AACdL,MAAAA,KAAK,CAACkB,QAAN,CAAejB,SAAf;AACAD,MAAAA,KAAK,CAACmB,aAAN;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAET,WAA7B;AAA0C,MAAA,SAAS,EAAC,aAApD;AAAkE,MAAA,WAAW,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEK,SAA/B;AAA0C,MAAA,SAAS,EAAC,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,sBAAQV,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxBD;;GAAMN,W;;KAAAA,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { DoesUserExist } from './requests.jsx'\n\nconst LoginInputs = (props: any) => {\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"))\n  const [userExists, setUserExists] = useState(\"\")\n  const [send, setSend] = useState(fasle)\n  const handleInput = (event: any) => {\n    setStoreUser(event.target.value)\n  }\n  const { data } = DoesUserExist(storeUser, )\n\n  const sendInput = () => {\n    console.log(\"this is the new user\" + storeUser)\n    if (userExists) {\n      props.saveUser(storeUser)\n      props.setAlreadySet()\n    }\n  }\n\n  return (\n    <div className=\"logins\">\n      <input type=\"text\" onChange={handleInput} className=\"loginInputs\" placeholder=\"Username\"></input>\n      <button type=\"button\" onClick={sendInput} className=\"loginInputs\">Send</button>\n      <span> {userExists} </span>\n    </div>\n  )\n}\n\nexport default LoginInputs\n"]},"metadata":{},"sourceType":"module"}