{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DoesUserExist } from './requests.jsx';\n\nconst LoginInputs = props => {\n  _s();\n\n  var testUser = \"Hi\";\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"));\n  const [finalUser, setFinalUser] = useState(\"\");\n  const [userExists, setUserExists] = useState(\"\");\n  const [send, setSend] = useState(0);\n  var data;\n\n  const handleInput = event => {\n    setStoreUser(event.target.value);\n  };\n\n  var {\n    DoesExist\n  } = DoesUserExist(storeUser, finalUser); // TODO: this doesnt work\n\n  const sendInput = () => {\n    // console.log(\"LoginInputs: newuser \" + storeUser)\n    // console.log(\"LoginInputs: send: \", send)\n    // let newSend = send + 1\n    // console.log(\"LoginInputs: newSend: \", newSend)\n    // setSend(newSend)\n    // console.log(\"LoginInputs: send: \", send)\n    console.log(\"LoginInputs: finalUser: \", finalUser);\n\n    if (DoesExist) {\n      console.log(\"LoginInputs: SendInput: data \", DoesExist);\n      props.saveUser(storeUser);\n      props.setAlreadySet();\n      DoesExist = false;\n    }\n  };\n\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({\n    doesExist: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      name: finalUser\n    };\n    console.log(\"DoesUserExist: bodyContent: \", finalUser);\n    setState(state => ({\n      doesExist: state.doesExist,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, finalUser);\n      setState({\n        doesExist: json,\n        loading: false\n      });\n    });\n  }, [testUser]);\n  setUserExists(data.doesExist);\n  useEffect(() => {\n    console.log(\"Effetc\");\n  }, [finalUser]);\n\n  const setUser = () => {\n    setFinalUser(storeUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logins\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInput,\n      className: \"loginInputs\",\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setUser();\n        console.log(\"LoginInputs: testUser: \", finalUser);\n        sendInput();\n      },\n      className: \"loginInputs\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", userExists, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginInputs, \"xb5rh68HEc5AhnffCYJFNp9je9k=\");\n\n_c = LoginInputs;\nexport default LoginInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInputs\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/LoginInputs.tsx"],"names":["React","useState","useEffect","DoesUserExist","LoginInputs","props","testUser","storeUser","setStoreUser","localStorage","getItem","finalUser","setFinalUser","userExists","setUserExists","send","setSend","data","handleInput","event","target","value","DoesExist","sendInput","console","log","saveUser","setAlreadySet","url","state","setState","doesExist","loading","bodyContent","name","fetch","method","credentials","body","JSON","stringify","then","text","parse","json","setUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { DoesUserExist } from './requests.jsx'\n\nconst LoginInputs = (props: any) => {\n  var testUser = \"Hi\"\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"))\n  const [finalUser, setFinalUser] = useState(\"\")\n  const [userExists, setUserExists] = useState(\"\")\n  const [send, setSend] = useState(0)\n  var data: any\n  const handleInput = (event: any) => {\n    setStoreUser(event.target.value)\n  }\n  var { DoesExist } = DoesUserExist(storeUser, finalUser)\n  // TODO: this doesnt work\n  const sendInput = () => {\n    // console.log(\"LoginInputs: newuser \" + storeUser)\n    // console.log(\"LoginInputs: send: \", send)\n    // let newSend = send + 1\n    // console.log(\"LoginInputs: newSend: \", newSend)\n    // setSend(newSend)\n    // console.log(\"LoginInputs: send: \", send)\n    console.log(\"LoginInputs: finalUser: \", finalUser)\n    if (DoesExist) {\n      console.log(\"LoginInputs: SendInput: data \", DoesExist)\n      props.saveUser(storeUser)\n      props.setAlreadySet()\n      DoesExist = false\n    }\n  }\n\n\n\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({ doesExist: null, loading: true })\n  useEffect(() => {\n    var bodyContent = {\n      name: finalUser\n    }\n    console.log(\"DoesUserExist: bodyContent: \", finalUser)\n    setState(state => ({ doesExist: state.doesExist, loading: true }))\n    fetch(url, {\n      method: 'POST',\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, finalUser)\n      setState({ doesExist: json, loading: false })\n    })\n  }, [testUser])\n  setUserExists(data.doesExist)\n\n  useEffect(() => {\n    console.log(\"Effetc\")\n  }, [finalUser])\n\n  const setUser = () => {\n    setFinalUser(storeUser)\n  }\n\n  return (\n    <div className=\"logins\">\n      <input type=\"text\" onChange={handleInput} className=\"loginInputs\" placeholder=\"Username\"></input>\n      <button type=\"button\" onClick={() => {\n        setUser()\n        console.log(\"LoginInputs: testUser: \", finalUser)\n        sendInput()\n      }} className=\"loginInputs\">Send</button>\n      <span> {userExists} </span>\n    </div>\n  )\n}\n\nexport default LoginInputs\n"]},"metadata":{},"sourceType":"module"}