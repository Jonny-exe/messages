{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nconst url = 'http://192.168.0.16:8000/';\nconst headersContent = {\n  \"Access-Control-Allow-Credentials\": \"true\",\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\n  \"Access-Control-Max-Age\": \"1000\",\n  \"Access-Control-Allow-Headers\": \"x-requested-with, Content-Type, origin, authorization, accept, client-security-token\",\n  \"Content-Type\": \"application/json\"\n};\nexport const useFetch = () => {\n  _s();\n\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json);\n      setState({\n        data: json,\n        loading: false\n      });\n    });\n  }, []);\n  return state;\n};\n\n_s(useFetch, \"B9MLtoBjRJNFLzBgeci+fkFmQTk=\");\n\nexport const PostRequest = (userContent, reciverContent, textContent) => {\n  var bodyContent = {\n    sender: userContent,\n    receiver: reciverContent,\n    textContent: textContent\n  };\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(resJson);\n    return resJson;\n  });\n};\n_c = PostRequest;\nexport const GetWithFilter = (filterSender, filterReceiver) => {\n  _s2();\n\n  const url = 'http://192.168.0.16:5000/getwithfilter';\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      filter: {\n        sender: filterSender,\n        receiver: filterReceiver\n      }\n    };\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json);\n      setState({\n        data: json,\n        loading: false\n      });\n    });\n  }, [filterReceiver, filterSender]);\n  return state;\n};\n\n_s2(GetWithFilter, \"B9MLtoBjRJNFLzBgeci+fkFmQTk=\");\n\n_c2 = GetWithFilter;\nexport const AddFriend = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriend';\n  var jsonData;\n  var bodyContent = {\n    user: userContent,\n    newFriend: newFriendContent\n  };\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"this is from request\");\n    console.log(json);\n    return json;\n  });\n};\n_c3 = AddFriend;\nexport const AddUser = user => {\n  const url = 'http://192.168.0.16:5000/adduser';\n  var bodyContent = {\n    name: user\n  };\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n    console.log(json);\n    return json;\n  });\n};\n_c4 = AddUser;\nexport const GetFriends = (user, friendAdded) => {\n  _s3();\n\n  const url = 'http://192.168.0.16:5000/getfriends';\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    };\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json);\n      setState({\n        data: json,\n        loading: false\n      });\n    });\n  }, [user, friendAdded]);\n  return state;\n};\n\n_s3(GetFriends, \"B9MLtoBjRJNFLzBgeci+fkFmQTk=\");\n\n_c5 = GetFriends;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PostRequest\");\n$RefreshReg$(_c2, \"GetWithFilter\");\n$RefreshReg$(_c3, \"AddFriend\");\n$RefreshReg$(_c4, \"AddUser\");\n$RefreshReg$(_c5, \"GetFriends\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-proyect/src/requests.jsx"],"names":["useEffect","useState","url","headersContent","useFetch","state","setState","data","loading","fetch","then","text","JSON","parse","json","console","log","PostRequest","userContent","reciverContent","textContent","bodyContent","sender","receiver","method","headers","credentials","body","stringify","res","resJson","GetWithFilter","filterSender","filterReceiver","filter","AddFriend","newFriendContent","jsonData","user","newFriend","AddUser","name","GetFriends","friendAdded"],"mappings":";;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,MAAMC,GAAG,GAAG,2BAAZ;AACA,MAAMC,cAAc,GAAG;AACrB,sCAAoC,MADf;AAErB,iCAA+B,GAFV;AAGrB,kCAAgC,iCAHX;AAIrB,4BAA0B,MAJL;AAKrB,kCAAgC,sFALX;AAMrB,kBAAgB;AANK,CAAvB;AASA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAD,CAAlC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACD,KAAK,KAAK;AAACE,MAAAA,IAAI,EAAEF,KAAK,CAACE,IAAb;AAAmBC,MAAAA,OAAO,EAAE;AAA5B,KAAL,CAAN,CAAR;AACAC,IAAAA,KAAK,CAACP,GAAD,CAAL,CAAWQ,IAAX,CAAgBH,IAAI,IAAIA,IAAI,CAACI,IAAL,EAAxB,EAAqCD,IAArC,CAA0CC,IAAI,IAAIC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAlD,EAAoED,IAApE,CAAyEI,IAAI,IAAI;AAC/EC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEO,IAAP;AAAaN,QAAAA,OAAO,EAAE;AAAtB,OAAD,CAAR;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;AAOA,SAAOH,KAAP;AACD,CAXM;;GAAMD,Q;;AAab,OAAO,MAAMa,WAAW,GAAG,CAACC,WAAD,EAAcC,cAAd,EAA8BC,WAA9B,KAA8C;AACvE,MAAIC,WAAW,GAAG;AAChBC,IAAAA,MAAM,EAAEJ,WADQ;AAEhBK,IAAAA,QAAQ,EAAEJ,cAFM;AAGhBC,IAAAA,WAAW,EAAEA;AAHG,GAAlB;AAKAX,EAAAA,KAAK,CAACP,GAAD,EAAM;AACTsB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAEtB,cAFA;AAGTuB,IAAAA,WAAW,EAAE,aAHJ;AAITC,IAAAA,IAAI,EAAEf,IAAI,CAACgB,SAAL,CAAeP,WAAf;AAJG,GAAN,CAAL,CAKGX,IALH,CAKQmB,GAAG,IAAIA,GAAG,CAACf,IAAJ,EALf,EAK2BJ,IAL3B,CAKgCoB,OAAO,IAAI;AACzCf,IAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACA,WAAOA,OAAP;AACD,GARD;AASD,CAfM;KAAMb,W;AAiBb,OAAO,MAAMc,aAAa,GAAG,CAACC,YAAD,EAAeC,cAAf,KAAkC;AAAA;;AAC7D,QAAM/B,GAAG,GAAG,wCAAZ;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAD,CAAlC;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,WAAW,GAAG;AAChBa,MAAAA,MAAM,EAAE;AACNZ,QAAAA,MAAM,EAAEU,YADF;AAENT,QAAAA,QAAQ,EAAEU;AAFJ;AADQ,KAAlB;AAMA3B,IAAAA,QAAQ,CAACD,KAAK,KAAK;AAACE,MAAAA,IAAI,EAAEF,KAAK,CAACE,IAAb;AAAmBC,MAAAA,OAAO,EAAE;AAA5B,KAAL,CAAN,CAAR;AACAC,IAAAA,KAAK,CAACP,GAAD,EAAM;AACTsB,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAEtB,cAFA;AAGTuB,MAAAA,WAAW,EAAE,aAHJ;AAITC,MAAAA,IAAI,EAAEf,IAAI,CAACgB,SAAL,CAAeP,WAAf;AAJG,KAAN,CAAL,CAKGX,IALH,CAKQH,IAAI,IAAIA,IAAI,CAACI,IAAL,EALhB,EAK6BD,IAL7B,CAKkCC,IAAI,IAAIC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAL1C,EAK4DD,IAL5D,CAKiEI,IAAI,IAAI;AACvEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEO,IAAP;AAAaN,QAAAA,OAAO,EAAE;AAAtB,OAAD,CAAR;AACD,KARD;AASD,GAjBQ,EAiBN,CAACyB,cAAD,EAAiBD,YAAjB,CAjBM,CAAT;AAkBA,SAAO3B,KAAP;AACD,CAtBM;;IAAM0B,a;;MAAAA,a;AAwBb,OAAO,MAAMI,SAAS,GAAG,CAACjB,WAAD,EAAckB,gBAAd,KAAmC;AAC1D,QAAMlC,GAAG,GAAG,oCAAZ;AACA,MAAImC,QAAJ;AACA,MAAIhB,WAAW,GAAG;AAChBiB,IAAAA,IAAI,EAAEpB,WADU;AAEhBqB,IAAAA,SAAS,EAAEH;AAFK,GAAlB;AAIA3B,EAAAA,KAAK,CAACP,GAAD,EAAM;AACTsB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAEtB,cAFA;AAGTuB,IAAAA,WAAW,EAAE,aAHJ;AAITC,IAAAA,IAAI,EAAEf,IAAI,CAACgB,SAAL,CAAeP,WAAf;AAJG,GAAN,CAAL,CAKGX,IALH,CAKQI,IAAI,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAOA,IAAP;AACD,GATD;AAUD,CAjBM;MAAMqB,S;AAmBb,OAAO,MAAMK,OAAO,GAAIF,IAAD,IAAU;AAC/B,QAAMpC,GAAG,GAAG,kCAAZ;AACA,MAAImB,WAAW,GAAG;AAChBoB,IAAAA,IAAI,EAAEH;AADU,GAAlB;AAGA7B,EAAAA,KAAK,CAACP,GAAD,EAAM;AACTsB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAEtB,cAFA;AAGTuB,IAAAA,WAAW,EAAE,aAHJ;AAITC,IAAAA,IAAI,EAAEf,IAAI,CAACgB,SAAL,CAAeP,WAAf;AAJG,GAAN,CAAL,CAKGX,IALH,CAKQH,IAAI,IAAIA,IAAI,CAACI,IAAL,EALhB,EAK6BD,IAL7B,CAKkCC,IAAI,IAAIC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAL1C,EAK4DD,IAL5D,CAKiEI,IAAI,IAAI;AACvEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAOA,IAAP;AACD,GARD;AASD,CAdM;MAAM0B,O;AAgBb,OAAO,MAAME,UAAU,GAAG,CAACJ,IAAD,EAAOK,WAAP,KAAuB;AAAA;;AAC/C,QAAMzC,GAAG,GAAG,qCAAZ;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAD,CAAlC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,WAAW,GAAG;AAChBoB,MAAAA,IAAI,EAAEH;AADU,KAAlB;AAGAhC,IAAAA,QAAQ,CAACD,KAAK,KAAK;AAACE,MAAAA,IAAI,EAAEF,KAAK,CAACE,IAAb;AAAmBC,MAAAA,OAAO,EAAE;AAA5B,KAAL,CAAN,CAAR;AACAC,IAAAA,KAAK,CAACP,GAAD,EAAM;AACTsB,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAEtB,cAFA;AAGTuB,MAAAA,WAAW,EAAE,aAHJ;AAITC,MAAAA,IAAI,EAAEf,IAAI,CAACgB,SAAL,CAAeP,WAAf;AAJG,KAAN,CAAL,CAKGX,IALH,CAKQH,IAAI,IAAIA,IAAI,CAACI,IAAL,EALhB,EAK6BD,IAL7B,CAKkCC,IAAI,IAAIC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAL1C,EAK4DD,IAL5D,CAKiEI,IAAI,IAAI;AACvEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEO,IAAP;AAAaN,QAAAA,OAAO,EAAE;AAAtB,OAAD,CAAR;AACD,KARD;AASD,GAdQ,EAcN,CAAC8B,IAAD,EAAOK,WAAP,CAdM,CAAT;AAgBA,SAAOtC,KAAP;AACD,CArBM;;IAAMqC,U;;MAAAA,U","sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst url = 'http://192.168.0.16:8000/';\nconst headersContent = {\n  \"Access-Control-Allow-Credentials\": \"true\",\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\n  \"Access-Control-Max-Age\": \"1000\",\n  \"Access-Control-Allow-Headers\": \"x-requested-with, Content-Type, origin, authorization, accept, client-security-token\",\n  \"Content-Type\": \"application/json\"\n}\n\nexport const useFetch = () => {\n  const [state, setState] = useState({data: null, loading: true})\n\n  useEffect(() => {\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json)\n      setState({data: json, loading: false})\n    })\n  }, [])\n  return state\n}\n\nexport const PostRequest = (userContent, reciverContent, textContent) => {\n  var bodyContent = {\n    sender: userContent,\n    receiver: reciverContent,\n    textContent: textContent\n  }\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(resJson)\n    return resJson\n  })\n}\n\nexport const GetWithFilter = (filterSender, filterReceiver) => {\n  const url = 'http://192.168.0.16:5000/getwithfilter';\n  const [state, setState] = useState({data: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      filter: {\n        sender: filterSender,\n        receiver: filterReceiver\n      }\n    }\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json)\n      setState({data: json, loading: false})\n    })\n  }, [filterReceiver, filterSender])\n  return state\n}\n\nexport const AddFriend = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriend';\n  var jsonData\n  var bodyContent = {\n    user: userContent,\n    newFriend: newFriendContent\n  }\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"this is from request\")\n    console.log(json)\n    return json\n  })\n}\n\nexport const AddUser = (user) => {\n  const url = 'http://192.168.0.16:5000/adduser';\n  var bodyContent = {\n    name: user\n  }\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n    console.log(json)\n    return json\n  })\n}\n\nexport const GetFriends = (user, friendAdded) => {\n  const url = 'http://192.168.0.16:5000/getfriends';\n  const [state, setState] = useState({data: null, loading: true})\n\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    setState(state => ({data: state.data, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(json)\n      setState({data: json, loading: false})\n    })\n  }, [user, friendAdded])\n\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}