{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/react-ts-project/src/Croper.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst Croper = props => {\n  _s();\n\n  const [state, setState] = useState({\n    image: props.image,\n    crop: {\n      x: 0,\n      y: 0\n    },\n    zoom: 1,\n    aspect: 16 / 9\n  });\n\n  const onCropChange = crop => {\n    setState({\n      crop\n    });\n  };\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n  const onZoomChange = zoom => {\n    setState({\n      zoom\n    });\n  };\n\n  const style = {\n    position: \"relative\",\n    height: \"200px\",\n    width: \"100px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: [\"hello\", /*#__PURE__*/_jsxDEV(Cropper, {\n      image: props.image,\n      crop: {\n        x: 0,\n        y: 0\n      },\n      zoom: 1,\n      aspect: 1 / 1,\n      onCropChange: onCropChange,\n      onCropComplete: onCropComplete,\n      onZoomChange: onZoomChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Croper, \"bz3plI4OvJ4LJKTHKPmq0W2hoaI=\");\n\n_c = Croper;\nexport default Croper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Croper\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/react-ts-project/src/Croper.jsx"],"names":["React","useState","Cropper","Croper","props","state","setState","image","crop","x","y","zoom","aspect","onCropChange","onCropComplete","croppedArea","croppedAreaPixels","console","log","onZoomChange","style","position","height","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,KAAK,EAAEH,KAAK,CAACG,KADoB;AAEjCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,CAAC,EAAE,CADC;AAEJC,MAAAA,CAAC,EAAE;AAFC,KAF2B;AAMjCC,IAAAA,IAAI,EAAE,CAN2B;AAOjCC,IAAAA,MAAM,EAAE,KAAK;AAPoB,GAAD,CAAlC;;AAUA,QAAMC,YAAY,GAAIL,IAAD,IAAU;AAC7BF,IAAAA,QAAQ,CAAC;AAACE,MAAAA;AAAD,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMM,cAAc,GAAG,CAACC,WAAD,EAAcC,iBAAd,KAAoC;AACzDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBC,iBAAzB;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAIR,IAAD,IAAU;AAC7BL,IAAAA,QAAQ,CAAC;AAACK,MAAAA;AAAD,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMS,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAE,UADE;AAEZC,IAAAA,MAAM,EAAE,OAFI;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAAd;AAKA,sBAAQ;AAAK,IAAA,KAAK,EAAEH,KAAZ;AAAA,qCAEN,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEhB,KAAK,CAACG,KAAtB;AAA6B,MAAA,IAAI,EAAE;AAC/BE,QAAAA,CAAC,EAAE,CAD4B;AAE/BC,QAAAA,CAAC,EAAE;AAF4B,OAAnC;AAGK,MAAA,IAAI,EAAE,CAHX;AAGc,MAAA,MAAM,EAAE,IAAI,CAH1B;AAG6B,MAAA,YAAY,EAAEG,YAH3C;AAGyD,MAAA,cAAc,EAAEC,cAHzE;AAGyF,MAAA,YAAY,EAAEK;AAHvG;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOD,CAlCD;;GAAMhB,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react'\nimport Cropper from 'react-easy-crop'\nconst Croper = (props) => {\n  const [state, setState] = useState({\n    image: props.image,\n    crop: {\n      x: 0,\n      y: 0\n    },\n    zoom: 1,\n    aspect: 16 / 9\n  })\n\n  const onCropChange = (crop) => {\n    setState({crop})\n  }\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels)\n  }\n\n  const onZoomChange = (zoom) => {\n    setState({zoom})\n  }\n  const style = {\n    position: \"relative\",\n    height: \"200px\",\n    width: \"100px\"\n  }\n  return (<div style={style}>\n    hello\n    <Cropper image={props.image} crop={{\n        x: 0,\n        y: 0\n      }} zoom={1} aspect={1 / 1} onCropChange={onCropChange} onCropComplete={onCropComplete} onZoomChange={onZoomChange}/>\n  </div>)\n}\n\nexport default Croper\n"]},"metadata":{},"sourceType":"module"}