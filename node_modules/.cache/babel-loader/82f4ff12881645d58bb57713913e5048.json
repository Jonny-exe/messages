{"ast":null,"code":"var request = require('request');\n\nclass Requests {\n  constructor(name, year) {\n    console.log(name, year);\n  }\n\n  create_request() {\n    // request('localhost:5000', (err: string, response: any, body: any) => {\n    //   console.log(\"hellos\")\n    //   if (!err && response.statusCode === 200) {\n    //     return body\n    //   }\n    // })\n    const request = new Request('localhost:5000', {\n      method: 'GET'\n    });\n    fetch(request).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong on api server!');\n      }\n    }).then(response => {\n      console.debug(response); // ...\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n}\n\nexport default Requests;","map":{"version":3,"sources":["/home/a/Documents/GitHub/my-project/src/requests.ts"],"names":["request","require","Requests","constructor","name","year","console","log","create_request","Request","method","fetch","then","response","status","json","Error","debug","catch","error"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,CAACC,IAAD,EAAeC,IAAf,EAA6B;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,IAAlB;AACD;;AAEDG,EAAAA,cAAc,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA,UAAMR,OAAO,GAAG,IAAIS,OAAJ,CAAY,gBAAZ,EAA8B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA9B,CAAhB;AACAC,IAAAA,KAAK,CAACX,OAAD,CAAL,CACDY,IADC,CACIC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,OAFD,MAEO;AACL,cAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACD;AACF,KAPC,EAQDJ,IARC,CAQIC,QAAQ,IAAI;AAChBP,MAAAA,OAAO,CAACW,KAAR,CAAcJ,QAAd,EADgB,CAEhB;AACD,KAXC,EAWCK,KAXD,CAWOC,KAAK,IAAI;AAChBb,MAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACD,KAbC;AAcD;;AA3BY;;AA8Bf,eAAejB,QAAf","sourcesContent":["var request = require('request');\n\nclass Requests {\n  constructor(name: string, year: number) {\n    console.log(name, year)\n  }\n\n  create_request() {\n    // request('localhost:5000', (err: string, response: any, body: any) => {\n    //   console.log(\"hellos\")\n    //   if (!err && response.statusCode === 200) {\n    //     return body\r\n    //   }\r\n    // })\n    const request = new Request('localhost:5000', { method: 'GET' });\r\n    fetch(request)\n  .then(response => {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw new Error('Something went wrong on api server!');\n    }\n  })\n  .then(response => {\n    console.debug(response);\n    // ...\n  }).catch(error => {\n    console.error(error);\n  }); \r\n  }\n}\n\nexport default Requests\n"]},"metadata":{},"sourceType":"module"}