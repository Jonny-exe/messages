[{"/home/a/Documents/GitHub/react-ts-project/src/index.tsx":"1","/home/a/Documents/GitHub/react-ts-project/src/reportWebVitals.js":"2","/home/a/Documents/GitHub/react-ts-project/src/App.tsx":"3","/home/a/Documents/GitHub/react-ts-project/src/requests.jsx":"4","/home/a/Documents/GitHub/react-ts-project/src/SendInputs.tsx":"5","/home/a/Documents/GitHub/react-ts-project/src/MessagesAll.tsx":"6","/home/a/Documents/GitHub/react-ts-project/src/Friends.tsx":"7","/home/a/Documents/GitHub/react-ts-project/src/Login.tsx":"8","/home/a/Documents/GitHub/react-ts-project/src/Logo.tsx":"9","/home/a/Documents/GitHub/react-ts-project/src/Message.tsx":"10","/home/a/Documents/GitHub/react-ts-project/src/Friend.tsx":"11","/home/a/Documents/GitHub/react-ts-project/src/FriendAdd.tsx":"12","/home/a/Documents/GitHub/react-ts-project/src/LoginInputs.tsx":"13","/home/a/Documents/GitHub/react-ts-project/src/Croper.tsx":"14","/home/a/Documents/GitHub/react-ts-project/src/FriendRequests.tsx":"15","/home/a/Documents/GitHub/react-ts-project/src/FriendRequest.tsx":"16"},{"size":480,"mtime":1607623512192,"results":"17","hashOfConfig":"18"},{"size":588,"mtime":1607623512192,"results":"19","hashOfConfig":"18"},{"size":1919,"mtime":1607779741232,"results":"20","hashOfConfig":"18"},{"size":7999,"mtime":1607623512192,"results":"21","hashOfConfig":"18"},{"size":647,"mtime":1607623512192,"results":"22","hashOfConfig":"18"},{"size":770,"mtime":1607779738796,"results":"23","hashOfConfig":"18"},{"size":539,"mtime":1607623512192,"results":"24","hashOfConfig":"18"},{"size":2169,"mtime":1607779809820,"results":"25","hashOfConfig":"18"},{"size":2176,"mtime":1607779783704,"results":"26","hashOfConfig":"18"},{"size":330,"mtime":1607623512192,"results":"27","hashOfConfig":"18"},{"size":450,"mtime":1607623512192,"results":"28","hashOfConfig":"18"},{"size":673,"mtime":1607623512192,"results":"29","hashOfConfig":"18"},{"size":3105,"mtime":1607623512192,"results":"30","hashOfConfig":"18"},{"size":744,"mtime":1607779026661,"results":"31","hashOfConfig":"18"},{"size":592,"mtime":1607623512192,"results":"32","hashOfConfig":"18"},{"size":762,"mtime":1607623512192,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1igx6s5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/a/Documents/GitHub/react-ts-project/src/index.tsx",[],["75","76"],"/home/a/Documents/GitHub/react-ts-project/src/reportWebVitals.js",["77"],"\"use strict\";\nexports.__esModule = true;\nvar reportWebVitals = function (onPerfEntry) {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        Promise.resolve().then(function () { return require('web-vitals'); }).then(function (_a) {\n            var getCLS = _a.getCLS, getFID = _a.getFID, getFCP = _a.getFCP, getLCP = _a.getLCP, getTTFB = _a.getTTFB;\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\nexports[\"default\"] = reportWebVitals;\n",["78","79"],"/home/a/Documents/GitHub/react-ts-project/src/App.tsx",[],"/home/a/Documents/GitHub/react-ts-project/src/requests.jsx",["80","81"],"import {useEffect, useState} from \"react\";\n\nconst url = 'http://192.168.0.16:5000/';\nconst headersContent = {\n  // \"Access-Control-Allow-Credentials\": \"true\",\n  // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n  // \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, DELETE, PUT\",\n  // \"Access-Control-Max-Age\": \"1000\",\n  // \"Access-Control-Allow-Headers\": \"x-requested-with, Content-Type, origin, authorization, accept, client-security-token\",\n  // \"Content-Type\": \"application/json\"\n}\n\nexport const PostRequest = (userContent, reciverContent, textContent) => {\n  console.log(\"This is the texxt content: \" + textContent)\n  var bodyContent = {\n    sender: userContent,\n    receiver: reciverContent,\n    content: textContent\n  }\n  fetch(url + \"addmessage\", {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(\"PostRequest: \", resJson)\n    return resJson\n  })\n}\n\nexport const UploadProfileImage = (user, image, areaToCrop) => {\n  const bodyContent = {\n    name: user,\n    image: image,\n      areatocrop : areaToCrop\n  }\n  console.log(\"UploadProfileImage\", bodyContent)\n  fetch(url + \"uploadprofileimage\", {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(res => res.json()).then(resJson => {\n    console.log(\"PostRequest: \", resJson)\n    return resJson\n  })\n}\n\nexport const GetProfileImage = (user) => {\n  const [state, setState] = useState({picture: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    console.log(\"GetProfileImage: bodyContent: \", bodyContent)\n    setState(state => ({picture: state.picture, loading: true}))\n    fetch(url + \"getprofileimage\", {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetProfileImage: json data: \", json)\n      setState({picture: json, loading: false})\n    })\n  }, [user])\n  return state\n}\n\nexport const UserLogin = (finalUser, finalPassword) => {\n  const [state, setState] = useState({successfulLogin: null, loginLoading: true})\n  const url = 'http://192.168.0.16:5000/login';\n  useEffect(() => {\n    var bodyContent = {\n      name: finalUser,\n      pass: finalPassword\n    }\n    console.log(\"Login: bodyContent: \", bodyContent)\n    setState(state => ({successfulLogin: null, loginLoading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"UserLogin: json data\", json)\n      if (json != null) {\n        console.log(\"UserLogin: json set\")\n        setState({successfulLogin: json, loginLoading: false})\n      }\n    })\n  }, [finalPassword])\n  return state\n}\n\nexport const DoesUserExist = (newUser) => {\n  const url = 'http://192.168.0.16:5000/doesuserexist';\n  const [state, setState] = useState({doesUserExist: null, registerLoading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: newUser\n    }\n    console.log(\"DoesUserExist: bodyContent: \", bodyContent, newUser)\n    setState({doesUserExist: null, registerLoading: true})\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"DoesUserExist: json data\", json, newUser)\n      setState({doesUserExist: json, registerLoading: false})\n    })\n  }, [newUser])\n  return state\n}\n\nexport const GetFriendRequests = (user) => {\n  const url = 'http://localhost:5000/getfriendrequests';\n  const [state, setState] = useState({requests: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    console.log(\"GetFriendRequests: bodyContent: \", bodyContent)\n    setState(state => ({requests: state.requests, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriendRequests: json data: \", json)\n      setState({requests: json, loading: false})\n    })\n  }, [])\n  return state\n}\n\nexport const GetWithFilter = (filterSender, filterReceiver) => {\n  const url = 'http://localhost:5000/getwithfilter';\n  const [state, setState] = useState({messages: null, loading: true})\n  useEffect(() => {\n    var bodyContent = {\n      sender: filterSender,\n      receiver: filterReceiver\n    }\n    setState(state => ({messages: state.messages, loading: true}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetWithFilter: json data: \", json)\n      setState({messages: json, loading: false})\n    })\n  }, [filterReceiver, filterSender])\n  return state\n}\n\n\nexport const AddFriend = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriend';\n  // var jsonData\n  var bodyContent = {\n    name: userContent,\n    newFriend: newFriendContent\n  }\n\n  console.log(\"AddFriend: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriend: \", json)\n    return json\n  })\n}\n\nexport const AddFriendRequest = (userContent, newFriendContent) => {\n  const url = 'http://192.168.0.16:5000/addfriendrequest';\n  // var jsonData\n  var bodyContent = {\n    name: userContent,\n    newFriend: newFriendContent\n  }\n\n  console.log(\"AddFriendRequest: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"AddFriendRequest: \", json)\n    return json\n  })\n}\n\nexport const RemoveFriendRequest = (user, friendToRemove) => {\n  const url = 'http://192.168.0.16:5000/removefriendrequest';\n  // var jsonData\n  var bodyContent = {\n    name: user,\n    FriendToRemove: friendToRemove\n  }\n\n  console.log(\"RemoveFriendRequest: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(json => {\n    console.log(\"RemoveFriendRequest: \", json)\n    return json\n  })\n}\n\nexport const AddUser = (username, password) => {\n  // TODO: Maybe this doesnt work without capital letters. Test it\n  const url = 'http://192.168.0.16:5000/adduser';\n  var bodyContent = {\n    name: username,\n    pass: password,\n    friends: [],\n    friendRequests: [],\n    profileImage: \"\"\n  }\n  console.log(\"AddUser: bodyContent: \", bodyContent)\n  fetch(url, {\n    method: 'POST',\n    headers: headersContent,\n    credentials: 'same-origin',\n    body: JSON.stringify(bodyContent)\n  }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n    console.log(\"AddUser: \", json)\n    return json\n  })\n}\n\nexport const GetFriends = (user, friendAdded) => {\n  const url = 'http://192.168.0.16:5000/getfriends';\n  const [state, setState] = useState({friends: null})\n\n  useEffect(() => {\n    var bodyContent = {\n      name: user\n    }\n    setState(state => ({data: state.data}))\n    fetch(url, {\n      method: 'POST',\n      headers: headersContent,\n      credentials: 'same-origin',\n      body: JSON.stringify(bodyContent)\n    }).then(data => data.text()).then(text => JSON.parse(text)).then(json => {\n      console.log(\"GetFriends: \", json)\n      setState({friends: json})\n    })\n  }, [user, friendAdded])\n\n  return state\n}\n","/home/a/Documents/GitHub/react-ts-project/src/SendInputs.tsx",[],"/home/a/Documents/GitHub/react-ts-project/src/MessagesAll.tsx",["82"],"import React from 'react'\nimport Message from './Message'\nimport { GetWithFilter } from './requests.jsx'\n\nexport const MessagesAll = (props: any) => {\n  const { messages } = GetWithFilter(props.sender, props.receiver)\n  console.log(\"MessagesAll: data: \", messages)\n  console.log(messages)\n  if (props.receiver == \"\") {\n    return (\n      <div className=\"messages\" >\n        <span className=\"noMessagesText\">To start chatting select a receiver</span>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"messages\">\n        <h3>{props.receiver} </h3>\n        {!messages ? \"loading\" : messages.map((content: any) => (\n          <Message data={content} user={props.valueUser} key={content._id} />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default MessagesAll\n","/home/a/Documents/GitHub/react-ts-project/src/Friends.tsx",[],"/home/a/Documents/GitHub/react-ts-project/src/Login.tsx",["83"],"/home/a/Documents/GitHub/react-ts-project/src/Logo.tsx",["84","85"],"import React, { useState, useEffect } from 'react'\nimport { UploadProfileImage, GetProfileImage } from './requests.jsx'\nimport Croper from './Croper'\n\nconst Logo = (props: any) => {\n  const [image, setImage] = useState(null)\n  const [modal, setModal] = useState(false)\n  const [areaToCrop, setAreaToCrop] = useState({})\n\n  var { picture } = GetProfileImage(props.valueUser)\n  useEffect(() => {\n    if (props.valueUser != null) {\n      setImage(picture)\n    }\n  }, [picture])\n  const sendFile = () => {\n    UploadProfileImage(props.valueUser, image, areaToCrop)\n  }\n\n  const handleAreaToCrop = (data: object) => {\n    console.log(data)\n    setAreaToCrop(data)\n  }\n\n  const handleFile = (e: any) => {\n    let image = e.target.files[0]\n\n    let reader = new FileReader()\n    console.log(\"Logo: image\", image)\n    reader.readAsDataURL(image)\n    reader.onload = (e: any) => {\n      let base64 = e.target.result\n      console.log(base64)\n      setImage(base64)\n    }\n  }\n\n  const imageOnClick = () => {\n    console.log(\"Logo: imageOnClick: modal\", true)\n    setModal(true)\n  }\n\n  const closeModal = () => {\n    console.log(\"Logo: imageOnClick: modal\", false)\n    setModal(false)\n  }\n\n\n  return (\n    <div>\n      <div className={`overlay ${modal ? \"overlayActive\" : \"\"}`} onClick={closeModal}>\n      </div>\n      <img src={image} onClick={imageOnClick} className=\"profileImage\" ></img>\n      <div className={`modal ${modal ? \"modalActive\" : \"\"}`}>\n        <div className=\"modalHeader\">\n          <h3> Resise your image </h3>\n          <button type=\"button\" className=\"closeHeaderButton\" onClick={closeModal}>&times;</button>\n        </div>\n        <div className=\"modalBody\">\n          <div>\n            <div className=\"fileInputContainer\">\n              <input type=\"file\" onChange={handleFile} className=\"changeProfileImage uploadImageInput\" name=\"image\" />\n            </div>\n            <button type=\"button\" className=\"sendFile\" onClick={sendFile}>Upload File</button>\n          </div>\n          <div className=\"croper\">\n            <Croper handleAreaToCrop={handleAreaToCrop} image={image} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Logo\n","/home/a/Documents/GitHub/react-ts-project/src/Message.tsx",[],"/home/a/Documents/GitHub/react-ts-project/src/Friend.tsx",["86"],"import React from 'react'\nimport { GetProfileImage } from './requests.jsx'\n\nfunction Friend(props: any) {\n  const setReceiver = () => {\n    props.setReceiver(props.name)\n  }\n\n  var { picture } = GetProfileImage(props.name)\n  console.log(\"Friend: picturea\", picture)\n  return (\n    <div className=\"friend\" onClick={setReceiver}>\n      <h3> {props.name} <img className=\"friendPicture\" src={picture}></img></h3>\n\n    </div>\n  )\n}\n\nexport default Friend\n","/home/a/Documents/GitHub/react-ts-project/src/FriendAdd.tsx",[],"/home/a/Documents/GitHub/react-ts-project/src/LoginInputs.tsx",["87","88"],"import React, { useState, useEffect } from 'react'\nimport { UserLogin, DoesUserExist } from './requests.jsx'\n\nconst LoginInputs = (props: any) => {\n  const [storeUser, setStoreUser] = useState(localStorage.getItem(\"user\"))\n  const [userWarning, setUserWarning] = useState(undefined)\n  const [storePassword, setStorePassword] = useState(\"\")\n  const [finalLoginPassword, setFinalLoginPassword] = useState(\"\")\n  const [finalRegisterUser, setFinalRegisterUser] = useState(\"\")\n  const [passwordWarning, setPasswordWarning] = useState(undefined)\n  const handleRegister = (event: any) => {\n    setStorePassword(event.target.value)\n  }\n\n  const handleLogin = (event: any) => {\n    setStoreUser(event.target.value)\n  }\n\n  var { loginLoading, successfulLogin } = UserLogin(storeUser, finalLoginPassword)\n  var { doesUserExist, registerLoading } = DoesUserExist(finalRegisterUser)\n\n  useEffect(() => {\n    console.log(\"LoginInputs: sendLogin: loading, successfulLogin\", loginLoading, successfulLogin)\n    // Ask if the data has been loaded, this cant be done with successfulLogin because it may be still the old value\n    if (!loginLoading) {\n      // Never null\n      if (successfulLogin) {\n        console.log(\"LoginInputs: sendLogin: successfully\", successfulLogin)\n        props.login(storeUser)\n        props.toggleAlreadySet()\n        // doesUserExist = false\n      } else {\n        setPasswordWarning(true)\n        setUserWarning(false)\n      }\n      successfulLogin = null\n    }\n  }, [successfulLogin])\n  console.log(doesUserExist)\n\n  useEffect(() => {\n    console.log(\"LoginInputs: sendRegister: loading, doesuserExist\", registerLoading, doesUserExist)\n    // Ask if the data has been loaded\n    if (!registerLoading) {\n      if (!doesUserExist) {\n        console.log(\"LoginInputs: storeUser\", storeUser)\n        if (storeUser !== \"\" && storeUser !== \"null\") {\n          setUserWarning(false)\n          console.log(\"LoginInputs: SendInput: doesUserExist \", doesUserExist)\n          props.saveUser(storeUser, storePassword)\n          props.toggleAlreadySet()\n          // doesUserExist = false\n        }\n      } else {\n        setUserWarning(true)\n        setPasswordWarning(false)\n      }\n    }\n  }, [doesUserExist])\n\n  return (\n    <div className=\"logins\">\n      <input type=\"text\" onChange={handleLogin} className=\"loginTextInput textInput\" placeholder=\"Username\"></input>\n      <input type=\"text\" onChange={handleRegister} className=\"loginTextInput textInput\" placeholder=\"Password\"></input>\n      <button type=\"button\" onClick={() => {\n        setFinalLoginPassword(storePassword)\n      }} className=\"loginButtons button\">Login</button>\n      <button type=\"button\" onClick={() => {\n        setFinalRegisterUser(storeUser)\n      }} className=\"loginButtons button\">Register</button>\n      <span className=\"userExistsWarning\"> {userWarning !== undefined ? userWarning ? \"User already exists ❌\" : \"\" : \"\"} </span>\n      <span className=\"userExistsWarning\"> {passwordWarning !== undefined ? passwordWarning ? \"Wrong Password or username ❌\" : \"\" : \"\"} </span>\n    </div>\n  )\n}\n\nexport default LoginInputs\n","/home/a/Documents/GitHub/react-ts-project/src/Croper.tsx",["89"],"/home/a/Documents/GitHub/react-ts-project/src/FriendRequests.tsx",["90"],"import React from 'react'\nimport FriendRequest from './FriendRequest'\nimport { GetFriendRequests } from './requests.jsx'\n\nconst FriendRequests = (props: any) => {\n  const { requests } = GetFriendRequests(props.valueUser)\n  console.log(\"FriendRequests: data: \", requests, props.valueUser)\n\n  return (\n    <div>\n      <h2> Friend requests </h2>\n      {requests == null ? \"Loading\" : requests.length == 0 ? \"No requests\" : requests.map((r: any) => (\n        <div> <FriendRequest valueUser={props.valueUser}name={r.name} date={r.date} /> </div>))}\n    </div>\n  )\n}\n\nexport default FriendRequests\n","/home/a/Documents/GitHub/react-ts-project/src/FriendRequest.tsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","endLine":1,"endColumn":14,"fix":"99"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"100","severity":1,"message":"101","line":92,"column":6,"nodeType":"102","endLine":92,"endColumn":21,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":136,"column":6,"nodeType":"102","endLine":136,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":9,"column":22,"nodeType":"108","messageId":"109","endLine":9,"endColumn":24},{"ruleId":null,"fatal":true,"severity":2,"message":"110","line":62,"column":0},{"ruleId":"100","severity":1,"message":"111","line":15,"column":6,"nodeType":"102","endLine":15,"endColumn":15,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":53,"column":7,"nodeType":"115","endLine":53,"endColumn":73},{"ruleId":"113","severity":1,"message":"114","line":13,"column":25,"nodeType":"115","endLine":13,"endColumn":70},{"ruleId":"100","severity":1,"message":"116","line":36,"column":25,"nodeType":"117","endLine":36,"endColumn":29},{"ruleId":"100","severity":1,"message":"118","line":59,"column":6,"nodeType":"102","endLine":59,"endColumn":21,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"120","line":11,"column":6,"nodeType":"102","endLine":11,"endColumn":8,"suggestions":"121"},{"ruleId":"106","severity":1,"message":"107","line":12,"column":55,"nodeType":"108","messageId":"109","endLine":12,"endColumn":57},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"124","text":"125"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'finalUser'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["127"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Parsing error: Declaration or statement expected.","React Hook useEffect has a missing dependency: 'props.valueUser'. Either include it or remove the dependency array.",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assignments to the 'successfulLogin' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'props', 'registerLoading', 'storePassword', and 'storeUser'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["129"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["130"],"no-global-assign","no-unsafe-negation",[0,13],"",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [finalPassword, finalUser]",{"range":"141","text":"142"},"Update the dependencies array to be: [user]",{"range":"143","text":"144"},"Update the dependencies array to be: [picture, props.valueUser]",{"range":"145","text":"146"},"Update the dependencies array to be: [doesUserExist, props, registerLoading, storePassword, storeUser]",{"range":"147","text":"148"},"Update the dependencies array to be: [props]",{"range":"149","text":"150"},[3006,3021],"[finalPassword, finalUser]",[4523,4525],"[user]",[464,473],"[picture, props.valueUser]",[2198,2213],"[doesUserExist, props, registerLoading, storePassword, storeUser]",[426,428],"[props]"]